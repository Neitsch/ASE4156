// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvestBucketRelay close without delete 1`] = `
<CtxProvider>
  <div>
    <Relay(InvestBucketRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestBucketRelay_bucket": Object {},
          },
          "__id": "1",
          "description": null,
          "id": "1",
          "isOwner": true,
          "name": "Bucket name",
          "public": true,
        }
      }
    >
      <InvestBucketRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestBucketRelay_bucket": Object {},
            },
            "__id": "1",
            "description": null,
            "id": "1",
            "isOwner": true,
            "name": "Bucket name",
            "public": true,
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment2",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": 2,
                              "kind": "LocalArgument",
                              "name": "first",
                              "type": "Int!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": Object {
                            "connection": Array [
                              Object {
                                "count": "first",
                                "cursor": null,
                                "direction": "forward",
                                "path": Array [
                                  "description",
                                ],
                              },
                            ],
                          },
                          "name": "InvestBucketRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "name",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "public",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "isOwner",
                              "storageKey": null,
                            },
                            Object {
                              "alias": "description",
                              "args": null,
                              "concreteType": "GInvestmentBucketAttributeConnection",
                              "kind": "LinkedField",
                              "name": "__InvestBucketRelay_description_connection",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentBucketAttributeEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentBucketAttribute",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "id",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "text",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "isGood",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "__typename",
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "cursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "PageInfo",
                                  "kind": "LinkedField",
                                  "name": "pageInfo",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "hasNextPage",
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "endCursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {
                          "first": 2,
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": 2,
                            "kind": "LocalArgument",
                            "name": "first",
                            "type": "Int!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": Object {
                          "connection": Array [
                            Object {
                              "count": "first",
                              "cursor": null,
                              "direction": "forward",
                              "path": Array [
                                "description",
                              ],
                            },
                          ],
                        },
                        "name": "InvestBucketRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "name",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "public",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "isOwner",
                            "storageKey": null,
                          },
                          Object {
                            "alias": "description",
                            "args": null,
                            "concreteType": "GInvestmentBucketAttributeConnection",
                            "kind": "LinkedField",
                            "name": "__InvestBucketRelay_description_connection",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentBucketAttributeEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentBucketAttribute",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "id",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "text",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "isGood",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "__typename",
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "cursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "PageInfo",
                                "kind": "LinkedField",
                                "name": "pageInfo",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "hasNextPage",
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "endCursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {
                        "first": 2,
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <div>
          <withStyles(Dialog)
            id="dialog1"
            onRequestClose={[Function]}
            open={true}
          >
            <Dialog
              classes={
                Object {
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              id="dialog1"
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              onRequestClose={[Function]}
              open={true}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                BackdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                id="dialog1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                onRequestClose={[Function]}
                show={true}
              >
                <Modal
                  BackdropComponent={[Function]}
                  BackdropInvisible={false}
                  BackdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  id="dialog1"
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  onRequestClose={[Function]}
                  show={true}
                >
                  <Portal
                    open={true}
                  >
                    <div
                      className="MuiModal-root-8 MuiDialog-root-1"
                      id="dialog1"
                    >
                      <withTheme(Fade)
                        appear={true}
                        in={true}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={true}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Backdrop)
                              invisible={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                            >
                              <Backdrop
                                classes={
                                  Object {
                                    "invisible": "MuiBackdrop-invisible-99",
                                    "root": "MuiBackdrop-root-98",
                                  }
                                }
                                invisible={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                              >
                                <div
                                  aria-hidden="true"
                                  className="MuiBackdrop-root-98"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                />
                              </Backdrop>
                            </withStyles(Backdrop)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                      <withTheme(Fade)
                        appear={true}
                        in={true}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        role="document"
                        tabIndex={-1}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          role="document"
                          tabIndex={-1}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            role="document"
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            tabIndex={-1}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Paper)
                              className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                              elevation={24}
                              role="document"
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                              tabIndex={-1}
                            >
                              <Paper
                                className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                classes={
                                  Object {
                                    "root": "MuiPaper-root-10",
                                    "rounded": "MuiPaper-rounded-11",
                                    "shadow0": "MuiPaper-shadow0-12",
                                    "shadow1": "MuiPaper-shadow1-13",
                                    "shadow10": "MuiPaper-shadow10-22",
                                    "shadow11": "MuiPaper-shadow11-23",
                                    "shadow12": "MuiPaper-shadow12-24",
                                    "shadow13": "MuiPaper-shadow13-25",
                                    "shadow14": "MuiPaper-shadow14-26",
                                    "shadow15": "MuiPaper-shadow15-27",
                                    "shadow16": "MuiPaper-shadow16-28",
                                    "shadow17": "MuiPaper-shadow17-29",
                                    "shadow18": "MuiPaper-shadow18-30",
                                    "shadow19": "MuiPaper-shadow19-31",
                                    "shadow2": "MuiPaper-shadow2-14",
                                    "shadow20": "MuiPaper-shadow20-32",
                                    "shadow21": "MuiPaper-shadow21-33",
                                    "shadow22": "MuiPaper-shadow22-34",
                                    "shadow23": "MuiPaper-shadow23-35",
                                    "shadow24": "MuiPaper-shadow24-36",
                                    "shadow3": "MuiPaper-shadow3-15",
                                    "shadow4": "MuiPaper-shadow4-16",
                                    "shadow5": "MuiPaper-shadow5-17",
                                    "shadow6": "MuiPaper-shadow6-18",
                                    "shadow7": "MuiPaper-shadow7-19",
                                    "shadow8": "MuiPaper-shadow8-20",
                                    "shadow9": "MuiPaper-shadow9-21",
                                  }
                                }
                                component="div"
                                elevation={24}
                                role="document"
                                square={false}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <div
                                  className="MuiPaper-root-10 MuiPaper-shadow24-36 MuiPaper-rounded-11 MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                  role="document"
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                  tabIndex={-1}
                                >
                                  <withStyles(DialogTitle)>
                                    <DialogTitle
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root-100",
                                        }
                                      }
                                      disableTypography={false}
                                    >
                                      <div
                                        className="MuiDialogTitle-root-100"
                                      >
                                        <withStyles(Typography)
                                          type="title"
                                        >
                                          <Typography
                                            align="inherit"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter-57",
                                                "alignJustify": "MuiTypography-alignJustify-59",
                                                "alignLeft": "MuiTypography-alignLeft-56",
                                                "alignRight": "MuiTypography-alignRight-58",
                                                "body1": "MuiTypography-body1-53",
                                                "body2": "MuiTypography-body2-52",
                                                "button": "MuiTypography-button-55",
                                                "caption": "MuiTypography-caption-54",
                                                "colorAccent": "MuiTypography-colorAccent-66",
                                                "colorError": "MuiTypography-colorError-67",
                                                "colorInherit": "MuiTypography-colorInherit-63",
                                                "colorPrimary": "MuiTypography-colorPrimary-64",
                                                "colorSecondary": "MuiTypography-colorSecondary-65",
                                                "display1": "MuiTypography-display1-48",
                                                "display2": "MuiTypography-display2-47",
                                                "display3": "MuiTypography-display3-46",
                                                "display4": "MuiTypography-display4-45",
                                                "gutterBottom": "MuiTypography-gutterBottom-61",
                                                "headline": "MuiTypography-headline-49",
                                                "noWrap": "MuiTypography-noWrap-60",
                                                "paragraph": "MuiTypography-paragraph-62",
                                                "root": "MuiTypography-root-44",
                                                "subheading": "MuiTypography-subheading-51",
                                                "title": "MuiTypography-title-50",
                                              }
                                            }
                                            color="default"
                                            gutterBottom={false}
                                            headlineMapping={
                                              Object {
                                                "body1": "p",
                                                "body2": "aside",
                                                "display1": "h1",
                                                "display2": "h1",
                                                "display3": "h1",
                                                "display4": "h1",
                                                "headline": "h1",
                                                "subheading": "h3",
                                                "title": "h2",
                                              }
                                            }
                                            noWrap={false}
                                            paragraph={false}
                                            type="title"
                                          >
                                            <h2
                                              className="MuiTypography-root-44 MuiTypography-title-50"
                                            >
                                              Are you sure?
                                            </h2>
                                          </Typography>
                                        </withStyles(Typography)>
                                      </div>
                                    </DialogTitle>
                                  </withStyles(DialogTitle)>
                                  <withStyles(DialogContent)>
                                    <DialogContent
                                      classes={
                                        Object {
                                          "root": "MuiDialogContent-root-101",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root-101"
                                      >
                                        <withStyles(DialogContentText)>
                                          <DialogContentText
                                            classes={
                                              Object {
                                                "root": "MuiDialogContentText-root-102",
                                              }
                                            }
                                          >
                                            <p
                                              className="MuiDialogContentText-root-102"
                                            >
                                              Are you sure you want to delete the bucket forever?
                                            </p>
                                          </DialogContentText>
                                        </withStyles(DialogContentText)>
                                      </div>
                                    </DialogContent>
                                  </withStyles(DialogContent)>
                                  <withStyles(DialogActions)>
                                    <DialogActions
                                      classes={
                                        Object {
                                          "action": "MuiDialogActions-action-104",
                                          "button": "MuiDialogActions-button-105",
                                          "root": "MuiDialogActions-root-103",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root-103"
                                      >
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".0"
                                        >
                                          <withStyles(Button)
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="keep"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="keep"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="keep"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="keep"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="keep"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Keep it
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".1"
                                        >
                                          <withStyles(Button)
                                            autoFocus={true}
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="delete2"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              autoFocus={true}
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="delete2"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                autoFocus={true}
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="delete2"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  autoFocus={true}
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="delete2"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    autoFocus={true}
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="delete2"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Delete
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                      </div>
                                    </DialogActions>
                                  </withStyles(DialogActions)>
                                </div>
                              </Paper>
                            </withStyles(Paper)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                    </div>
                  </Portal>
                </Modal>
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
          <InvestBucket
            attributes={
              Object {
                "bad": Array [],
                "good": Array [],
              }
            }
            deleteFunc={[Function]}
            editCompositionFunc={[Function]}
            editFunc={[Function]}
            investFunc={[Function]}
            seeMoreFunc={null}
            title="Bucket name"
          >
            <Card
              raised={false}
            >
              <withStyles(Paper)
                elevation={2}
              >
                <Paper
                  classes={
                    Object {
                      "root": "MuiPaper-root-10",
                      "rounded": "MuiPaper-rounded-11",
                      "shadow0": "MuiPaper-shadow0-12",
                      "shadow1": "MuiPaper-shadow1-13",
                      "shadow10": "MuiPaper-shadow10-22",
                      "shadow11": "MuiPaper-shadow11-23",
                      "shadow12": "MuiPaper-shadow12-24",
                      "shadow13": "MuiPaper-shadow13-25",
                      "shadow14": "MuiPaper-shadow14-26",
                      "shadow15": "MuiPaper-shadow15-27",
                      "shadow16": "MuiPaper-shadow16-28",
                      "shadow17": "MuiPaper-shadow17-29",
                      "shadow18": "MuiPaper-shadow18-30",
                      "shadow19": "MuiPaper-shadow19-31",
                      "shadow2": "MuiPaper-shadow2-14",
                      "shadow20": "MuiPaper-shadow20-32",
                      "shadow21": "MuiPaper-shadow21-33",
                      "shadow22": "MuiPaper-shadow22-34",
                      "shadow23": "MuiPaper-shadow23-35",
                      "shadow24": "MuiPaper-shadow24-36",
                      "shadow3": "MuiPaper-shadow3-15",
                      "shadow4": "MuiPaper-shadow4-16",
                      "shadow5": "MuiPaper-shadow5-17",
                      "shadow6": "MuiPaper-shadow6-18",
                      "shadow7": "MuiPaper-shadow7-19",
                      "shadow8": "MuiPaper-shadow8-20",
                      "shadow9": "MuiPaper-shadow9-21",
                    }
                  }
                  component="div"
                  elevation={2}
                  square={false}
                >
                  <div
                    className="MuiPaper-root-10 MuiPaper-shadow2-14 MuiPaper-rounded-11"
                  >
                    <withStyles(CardHeader)
                      title="Bucket name"
                    >
                      <CardHeader
                        classes={
                          Object {
                            "action": "MuiCardHeader-action-39",
                            "avatar": "MuiCardHeader-avatar-38",
                            "content": "MuiCardHeader-content-40",
                            "root": "MuiCardHeader-root-37",
                            "subheader": "MuiCardHeader-subheader-42",
                            "title": "MuiCardHeader-title-41",
                          }
                        }
                        title="Bucket name"
                      >
                        <withStyles(CardContent)
                          className="MuiCardHeader-root-37"
                        >
                          <CardContent
                            className="MuiCardHeader-root-37"
                            classes={
                              Object {
                                "root": "MuiCardContent-root-43",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root-43 MuiCardHeader-root-37"
                            >
                              <div
                                className="MuiCardHeader-content-40"
                              >
                                <withStyles(Typography)
                                  className="MuiCardHeader-title-41"
                                  component="span"
                                  type="headline"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-title-41"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="headline"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-headline-49 MuiCardHeader-title-41"
                                    >
                                      Bucket name
                                    </span>
                                  </Typography>
                                </withStyles(Typography)>
                                <withStyles(Typography)
                                  className="MuiCardHeader-subheader-42"
                                  color="secondary"
                                  component="span"
                                  type="body1"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-subheader-42"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="secondary"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="body1"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-body1-53 MuiTypography-colorSecondary-65 MuiCardHeader-subheader-42"
                                    />
                                  </Typography>
                                </withStyles(Typography)>
                              </div>
                            </div>
                          </CardContent>
                        </withStyles(CardContent)>
                      </CardHeader>
                    </withStyles(CardHeader)>
                    <withStyles(CardContent)>
                      <CardContent
                        classes={
                          Object {
                            "root": "MuiCardContent-root-43",
                          }
                        }
                      >
                        <div
                          className="MuiCardContent-root-43"
                        >
                          <withStyles(List)>
                            <List
                              classes={
                                Object {
                                  "dense": "MuiList-dense-70",
                                  "padding": "MuiList-padding-69",
                                  "root": "MuiList-root-68",
                                  "subheader": "MuiList-subheader-71",
                                }
                              }
                              component="ul"
                              dense={false}
                              disablePadding={false}
                            >
                              <ul
                                className="MuiList-root-68 MuiList-padding-69"
                              />
                            </List>
                          </withStyles(List)>
                          <withStyles(Button)
                            aria-label="add"
                            color="primary"
                            fab={true}
                            id="launch-edit"
                            onClick={[Function]}
                          >
                            <Button
                              aria-label="add"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={false}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={true}
                              id="launch-edit"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                aria-label="add"
                                className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="launch-edit"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  aria-label="add"
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="launch-edit"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    aria-label="add"
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                    disabled={false}
                                    id="launch-edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      <pure(Add)>
                                        <Add>
                                          <withStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "root": "MuiSvgIcon-root-97",
                                                }
                                              }
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-97"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </withStyles(SvgIcon)>
                                        </Add>
                                      </pure(Add)>
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardContent>
                    </withStyles(CardContent)>
                    <withStyles(CardActions)>
                      <CardActions
                        classes={
                          Object {
                            "action": "MuiCardActions-action-73",
                            "root": "MuiCardActions-root-72",
                          }
                        }
                        disableActionSpacing={false}
                      >
                        <div
                          className="MuiCardActions-root-72"
                        >
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            key=".0"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Invest
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="delete"
                            key=".1"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="delete"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="delete"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="delete"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Delete
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="edit-comp"
                            key=".2"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="edit-comp"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="edit-comp"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="edit-comp"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="edit-comp"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Composition
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardActions>
                    </withStyles(CardActions)>
                  </div>
                </Paper>
              </withStyles(Paper)>
            </Card>
          </InvestBucket>
        </div>
      </InvestBucketRelay>
    </Relay(InvestBucketRelay)>
  </div>
</CtxProvider>
`;

exports[`InvestBucketRelay close without delete 2`] = `
<CtxProvider>
  <div>
    <Relay(InvestBucketRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestBucketRelay_bucket": Object {},
          },
          "__id": "1",
          "description": null,
          "id": "1",
          "isOwner": true,
          "name": "Bucket name",
          "public": true,
        }
      }
    >
      <InvestBucketRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestBucketRelay_bucket": Object {},
            },
            "__id": "1",
            "description": null,
            "id": "1",
            "isOwner": true,
            "name": "Bucket name",
            "public": true,
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment2",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": 2,
                              "kind": "LocalArgument",
                              "name": "first",
                              "type": "Int!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": Object {
                            "connection": Array [
                              Object {
                                "count": "first",
                                "cursor": null,
                                "direction": "forward",
                                "path": Array [
                                  "description",
                                ],
                              },
                            ],
                          },
                          "name": "InvestBucketRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "name",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "public",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "isOwner",
                              "storageKey": null,
                            },
                            Object {
                              "alias": "description",
                              "args": null,
                              "concreteType": "GInvestmentBucketAttributeConnection",
                              "kind": "LinkedField",
                              "name": "__InvestBucketRelay_description_connection",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentBucketAttributeEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentBucketAttribute",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "id",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "text",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "isGood",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "__typename",
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "cursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "PageInfo",
                                  "kind": "LinkedField",
                                  "name": "pageInfo",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "hasNextPage",
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "endCursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {
                          "first": 2,
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": 2,
                            "kind": "LocalArgument",
                            "name": "first",
                            "type": "Int!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": Object {
                          "connection": Array [
                            Object {
                              "count": "first",
                              "cursor": null,
                              "direction": "forward",
                              "path": Array [
                                "description",
                              ],
                            },
                          ],
                        },
                        "name": "InvestBucketRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "name",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "public",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "isOwner",
                            "storageKey": null,
                          },
                          Object {
                            "alias": "description",
                            "args": null,
                            "concreteType": "GInvestmentBucketAttributeConnection",
                            "kind": "LinkedField",
                            "name": "__InvestBucketRelay_description_connection",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentBucketAttributeEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentBucketAttribute",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "id",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "text",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "isGood",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "__typename",
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "cursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "PageInfo",
                                "kind": "LinkedField",
                                "name": "pageInfo",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "hasNextPage",
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "endCursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {
                        "first": 2,
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <div>
          <withStyles(Dialog)
            id="dialog1"
            onRequestClose={[Function]}
            open={true}
          >
            <Dialog
              classes={
                Object {
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              id="dialog1"
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              onRequestClose={[Function]}
              open={true}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                BackdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                id="dialog1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                onRequestClose={[Function]}
                show={true}
              >
                <Modal
                  BackdropComponent={[Function]}
                  BackdropInvisible={false}
                  BackdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  id="dialog1"
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  onRequestClose={[Function]}
                  show={true}
                >
                  <Portal
                    open={true}
                  >
                    <div
                      className="MuiModal-root-8 MuiDialog-root-1"
                      id="dialog1"
                    >
                      <withTheme(Fade)
                        appear={true}
                        in={true}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={true}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Backdrop)
                              invisible={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                            >
                              <Backdrop
                                classes={
                                  Object {
                                    "invisible": "MuiBackdrop-invisible-99",
                                    "root": "MuiBackdrop-root-98",
                                  }
                                }
                                invisible={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                              >
                                <div
                                  aria-hidden="true"
                                  className="MuiBackdrop-root-98"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                />
                              </Backdrop>
                            </withStyles(Backdrop)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                      <withTheme(Fade)
                        appear={true}
                        in={true}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        role="document"
                        tabIndex={-1}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={true}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          role="document"
                          tabIndex={-1}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            role="document"
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            tabIndex={-1}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Paper)
                              className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                              elevation={24}
                              role="document"
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                              tabIndex={-1}
                            >
                              <Paper
                                className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                classes={
                                  Object {
                                    "root": "MuiPaper-root-10",
                                    "rounded": "MuiPaper-rounded-11",
                                    "shadow0": "MuiPaper-shadow0-12",
                                    "shadow1": "MuiPaper-shadow1-13",
                                    "shadow10": "MuiPaper-shadow10-22",
                                    "shadow11": "MuiPaper-shadow11-23",
                                    "shadow12": "MuiPaper-shadow12-24",
                                    "shadow13": "MuiPaper-shadow13-25",
                                    "shadow14": "MuiPaper-shadow14-26",
                                    "shadow15": "MuiPaper-shadow15-27",
                                    "shadow16": "MuiPaper-shadow16-28",
                                    "shadow17": "MuiPaper-shadow17-29",
                                    "shadow18": "MuiPaper-shadow18-30",
                                    "shadow19": "MuiPaper-shadow19-31",
                                    "shadow2": "MuiPaper-shadow2-14",
                                    "shadow20": "MuiPaper-shadow20-32",
                                    "shadow21": "MuiPaper-shadow21-33",
                                    "shadow22": "MuiPaper-shadow22-34",
                                    "shadow23": "MuiPaper-shadow23-35",
                                    "shadow24": "MuiPaper-shadow24-36",
                                    "shadow3": "MuiPaper-shadow3-15",
                                    "shadow4": "MuiPaper-shadow4-16",
                                    "shadow5": "MuiPaper-shadow5-17",
                                    "shadow6": "MuiPaper-shadow6-18",
                                    "shadow7": "MuiPaper-shadow7-19",
                                    "shadow8": "MuiPaper-shadow8-20",
                                    "shadow9": "MuiPaper-shadow9-21",
                                  }
                                }
                                component="div"
                                elevation={24}
                                role="document"
                                square={false}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <div
                                  className="MuiPaper-root-10 MuiPaper-shadow24-36 MuiPaper-rounded-11 MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                  role="document"
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                  tabIndex={-1}
                                >
                                  <withStyles(DialogTitle)>
                                    <DialogTitle
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root-100",
                                        }
                                      }
                                      disableTypography={false}
                                    >
                                      <div
                                        className="MuiDialogTitle-root-100"
                                      >
                                        <withStyles(Typography)
                                          type="title"
                                        >
                                          <Typography
                                            align="inherit"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter-57",
                                                "alignJustify": "MuiTypography-alignJustify-59",
                                                "alignLeft": "MuiTypography-alignLeft-56",
                                                "alignRight": "MuiTypography-alignRight-58",
                                                "body1": "MuiTypography-body1-53",
                                                "body2": "MuiTypography-body2-52",
                                                "button": "MuiTypography-button-55",
                                                "caption": "MuiTypography-caption-54",
                                                "colorAccent": "MuiTypography-colorAccent-66",
                                                "colorError": "MuiTypography-colorError-67",
                                                "colorInherit": "MuiTypography-colorInherit-63",
                                                "colorPrimary": "MuiTypography-colorPrimary-64",
                                                "colorSecondary": "MuiTypography-colorSecondary-65",
                                                "display1": "MuiTypography-display1-48",
                                                "display2": "MuiTypography-display2-47",
                                                "display3": "MuiTypography-display3-46",
                                                "display4": "MuiTypography-display4-45",
                                                "gutterBottom": "MuiTypography-gutterBottom-61",
                                                "headline": "MuiTypography-headline-49",
                                                "noWrap": "MuiTypography-noWrap-60",
                                                "paragraph": "MuiTypography-paragraph-62",
                                                "root": "MuiTypography-root-44",
                                                "subheading": "MuiTypography-subheading-51",
                                                "title": "MuiTypography-title-50",
                                              }
                                            }
                                            color="default"
                                            gutterBottom={false}
                                            headlineMapping={
                                              Object {
                                                "body1": "p",
                                                "body2": "aside",
                                                "display1": "h1",
                                                "display2": "h1",
                                                "display3": "h1",
                                                "display4": "h1",
                                                "headline": "h1",
                                                "subheading": "h3",
                                                "title": "h2",
                                              }
                                            }
                                            noWrap={false}
                                            paragraph={false}
                                            type="title"
                                          >
                                            <h2
                                              className="MuiTypography-root-44 MuiTypography-title-50"
                                            >
                                              Are you sure?
                                            </h2>
                                          </Typography>
                                        </withStyles(Typography)>
                                      </div>
                                    </DialogTitle>
                                  </withStyles(DialogTitle)>
                                  <withStyles(DialogContent)>
                                    <DialogContent
                                      classes={
                                        Object {
                                          "root": "MuiDialogContent-root-101",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root-101"
                                      >
                                        <withStyles(DialogContentText)>
                                          <DialogContentText
                                            classes={
                                              Object {
                                                "root": "MuiDialogContentText-root-102",
                                              }
                                            }
                                          >
                                            <p
                                              className="MuiDialogContentText-root-102"
                                            >
                                              Are you sure you want to delete the bucket forever?
                                            </p>
                                          </DialogContentText>
                                        </withStyles(DialogContentText)>
                                      </div>
                                    </DialogContent>
                                  </withStyles(DialogContent)>
                                  <withStyles(DialogActions)>
                                    <DialogActions
                                      classes={
                                        Object {
                                          "action": "MuiDialogActions-action-104",
                                          "button": "MuiDialogActions-button-105",
                                          "root": "MuiDialogActions-root-103",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root-103"
                                      >
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".0"
                                        >
                                          <withStyles(Button)
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="keep"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="keep"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="keep"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="keep"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="keep"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Keep it
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".1"
                                        >
                                          <withStyles(Button)
                                            autoFocus={true}
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="delete2"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              autoFocus={true}
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="delete2"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                autoFocus={true}
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="delete2"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  autoFocus={true}
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="delete2"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    autoFocus={true}
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="delete2"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Delete
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                      </div>
                                    </DialogActions>
                                  </withStyles(DialogActions)>
                                </div>
                              </Paper>
                            </withStyles(Paper)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                    </div>
                  </Portal>
                </Modal>
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
          <InvestBucket
            attributes={
              Object {
                "bad": Array [],
                "good": Array [],
              }
            }
            deleteFunc={[Function]}
            editCompositionFunc={[Function]}
            editFunc={[Function]}
            investFunc={[Function]}
            seeMoreFunc={null}
            title="Bucket name"
          >
            <Card
              raised={false}
            >
              <withStyles(Paper)
                elevation={2}
              >
                <Paper
                  classes={
                    Object {
                      "root": "MuiPaper-root-10",
                      "rounded": "MuiPaper-rounded-11",
                      "shadow0": "MuiPaper-shadow0-12",
                      "shadow1": "MuiPaper-shadow1-13",
                      "shadow10": "MuiPaper-shadow10-22",
                      "shadow11": "MuiPaper-shadow11-23",
                      "shadow12": "MuiPaper-shadow12-24",
                      "shadow13": "MuiPaper-shadow13-25",
                      "shadow14": "MuiPaper-shadow14-26",
                      "shadow15": "MuiPaper-shadow15-27",
                      "shadow16": "MuiPaper-shadow16-28",
                      "shadow17": "MuiPaper-shadow17-29",
                      "shadow18": "MuiPaper-shadow18-30",
                      "shadow19": "MuiPaper-shadow19-31",
                      "shadow2": "MuiPaper-shadow2-14",
                      "shadow20": "MuiPaper-shadow20-32",
                      "shadow21": "MuiPaper-shadow21-33",
                      "shadow22": "MuiPaper-shadow22-34",
                      "shadow23": "MuiPaper-shadow23-35",
                      "shadow24": "MuiPaper-shadow24-36",
                      "shadow3": "MuiPaper-shadow3-15",
                      "shadow4": "MuiPaper-shadow4-16",
                      "shadow5": "MuiPaper-shadow5-17",
                      "shadow6": "MuiPaper-shadow6-18",
                      "shadow7": "MuiPaper-shadow7-19",
                      "shadow8": "MuiPaper-shadow8-20",
                      "shadow9": "MuiPaper-shadow9-21",
                    }
                  }
                  component="div"
                  elevation={2}
                  square={false}
                >
                  <div
                    className="MuiPaper-root-10 MuiPaper-shadow2-14 MuiPaper-rounded-11"
                  >
                    <withStyles(CardHeader)
                      title="Bucket name"
                    >
                      <CardHeader
                        classes={
                          Object {
                            "action": "MuiCardHeader-action-39",
                            "avatar": "MuiCardHeader-avatar-38",
                            "content": "MuiCardHeader-content-40",
                            "root": "MuiCardHeader-root-37",
                            "subheader": "MuiCardHeader-subheader-42",
                            "title": "MuiCardHeader-title-41",
                          }
                        }
                        title="Bucket name"
                      >
                        <withStyles(CardContent)
                          className="MuiCardHeader-root-37"
                        >
                          <CardContent
                            className="MuiCardHeader-root-37"
                            classes={
                              Object {
                                "root": "MuiCardContent-root-43",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root-43 MuiCardHeader-root-37"
                            >
                              <div
                                className="MuiCardHeader-content-40"
                              >
                                <withStyles(Typography)
                                  className="MuiCardHeader-title-41"
                                  component="span"
                                  type="headline"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-title-41"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="headline"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-headline-49 MuiCardHeader-title-41"
                                    >
                                      Bucket name
                                    </span>
                                  </Typography>
                                </withStyles(Typography)>
                                <withStyles(Typography)
                                  className="MuiCardHeader-subheader-42"
                                  color="secondary"
                                  component="span"
                                  type="body1"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-subheader-42"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="secondary"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="body1"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-body1-53 MuiTypography-colorSecondary-65 MuiCardHeader-subheader-42"
                                    />
                                  </Typography>
                                </withStyles(Typography)>
                              </div>
                            </div>
                          </CardContent>
                        </withStyles(CardContent)>
                      </CardHeader>
                    </withStyles(CardHeader)>
                    <withStyles(CardContent)>
                      <CardContent
                        classes={
                          Object {
                            "root": "MuiCardContent-root-43",
                          }
                        }
                      >
                        <div
                          className="MuiCardContent-root-43"
                        >
                          <withStyles(List)>
                            <List
                              classes={
                                Object {
                                  "dense": "MuiList-dense-70",
                                  "padding": "MuiList-padding-69",
                                  "root": "MuiList-root-68",
                                  "subheader": "MuiList-subheader-71",
                                }
                              }
                              component="ul"
                              dense={false}
                              disablePadding={false}
                            >
                              <ul
                                className="MuiList-root-68 MuiList-padding-69"
                              />
                            </List>
                          </withStyles(List)>
                          <withStyles(Button)
                            aria-label="add"
                            color="primary"
                            fab={true}
                            id="launch-edit"
                            onClick={[Function]}
                          >
                            <Button
                              aria-label="add"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={false}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={true}
                              id="launch-edit"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                aria-label="add"
                                className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="launch-edit"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  aria-label="add"
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="launch-edit"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    aria-label="add"
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                    disabled={false}
                                    id="launch-edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      <pure(Add)>
                                        <Add>
                                          <withStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "root": "MuiSvgIcon-root-97",
                                                }
                                              }
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-97"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </withStyles(SvgIcon)>
                                        </Add>
                                      </pure(Add)>
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardContent>
                    </withStyles(CardContent)>
                    <withStyles(CardActions)>
                      <CardActions
                        classes={
                          Object {
                            "action": "MuiCardActions-action-73",
                            "root": "MuiCardActions-root-72",
                          }
                        }
                        disableActionSpacing={false}
                      >
                        <div
                          className="MuiCardActions-root-72"
                        >
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            key=".0"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Invest
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="delete"
                            key=".1"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="delete"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="delete"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="delete"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Delete
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="edit-comp"
                            key=".2"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="edit-comp"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="edit-comp"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="edit-comp"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="edit-comp"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Composition
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardActions>
                    </withStyles(CardActions)>
                  </div>
                </Paper>
              </withStyles(Paper)>
            </Card>
          </InvestBucket>
        </div>
      </InvestBucketRelay>
    </Relay(InvestBucketRelay)>
  </div>
</CtxProvider>
`;

exports[`InvestBucketRelay close without delete 3`] = `
<CtxProvider>
  <div>
    <Relay(InvestBucketRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestBucketRelay_bucket": Object {},
          },
          "__id": "1",
          "description": null,
          "id": "1",
          "isOwner": true,
          "name": "Bucket name",
          "public": true,
        }
      }
    >
      <InvestBucketRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestBucketRelay_bucket": Object {},
            },
            "__id": "1",
            "description": null,
            "id": "1",
            "isOwner": true,
            "name": "Bucket name",
            "public": true,
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment2",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": 2,
                              "kind": "LocalArgument",
                              "name": "first",
                              "type": "Int!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": Object {
                            "connection": Array [
                              Object {
                                "count": "first",
                                "cursor": null,
                                "direction": "forward",
                                "path": Array [
                                  "description",
                                ],
                              },
                            ],
                          },
                          "name": "InvestBucketRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "name",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "public",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "isOwner",
                              "storageKey": null,
                            },
                            Object {
                              "alias": "description",
                              "args": null,
                              "concreteType": "GInvestmentBucketAttributeConnection",
                              "kind": "LinkedField",
                              "name": "__InvestBucketRelay_description_connection",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentBucketAttributeEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentBucketAttribute",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "id",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "text",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "isGood",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "__typename",
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "cursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "PageInfo",
                                  "kind": "LinkedField",
                                  "name": "pageInfo",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "hasNextPage",
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "endCursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {
                          "first": 2,
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": 2,
                            "kind": "LocalArgument",
                            "name": "first",
                            "type": "Int!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": Object {
                          "connection": Array [
                            Object {
                              "count": "first",
                              "cursor": null,
                              "direction": "forward",
                              "path": Array [
                                "description",
                              ],
                            },
                          ],
                        },
                        "name": "InvestBucketRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "name",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "public",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "isOwner",
                            "storageKey": null,
                          },
                          Object {
                            "alias": "description",
                            "args": null,
                            "concreteType": "GInvestmentBucketAttributeConnection",
                            "kind": "LinkedField",
                            "name": "__InvestBucketRelay_description_connection",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentBucketAttributeEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentBucketAttribute",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "id",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "text",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "isGood",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "__typename",
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "cursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "PageInfo",
                                "kind": "LinkedField",
                                "name": "pageInfo",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "hasNextPage",
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "endCursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {
                        "first": 2,
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <div>
          <withStyles(Dialog)
            id="dialog1"
            onRequestClose={[Function]}
            open={false}
          >
            <Dialog
              classes={
                Object {
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              id="dialog1"
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              onRequestClose={[Function]}
              open={false}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                BackdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                id="dialog1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                onRequestClose={[Function]}
                show={false}
              >
                <Modal
                  BackdropComponent={[Function]}
                  BackdropInvisible={false}
                  BackdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  id="dialog1"
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  onRequestClose={[Function]}
                  show={false}
                >
                  <Portal
                    open={true}
                  >
                    <div
                      className="MuiModal-root-8 MuiDialog-root-1"
                      id="dialog1"
                    >
                      <withTheme(Fade)
                        appear={true}
                        in={false}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={false}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Backdrop)
                              invisible={false}
                              onClick={[Function]}
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                            >
                              <Backdrop
                                classes={
                                  Object {
                                    "invisible": "MuiBackdrop-invisible-99",
                                    "root": "MuiBackdrop-root-98",
                                  }
                                }
                                invisible={false}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                              >
                                <div
                                  aria-hidden="true"
                                  className="MuiBackdrop-root-98"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                />
                              </Backdrop>
                            </withStyles(Backdrop)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                      <withTheme(Fade)
                        appear={true}
                        in={false}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        role="document"
                        tabIndex={-1}
                        timeout={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          role="document"
                          tabIndex={-1}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "line": Object {
                                  "stepper": "#bdbdbd",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "line": Object {
                                      "stepper": "#bdbdbd",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            role="document"
                            style={
                              Object {
                                "opacity": "0",
                              }
                            }
                            tabIndex={-1}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <withStyles(Paper)
                              className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                              elevation={24}
                              role="document"
                              style={
                                Object {
                                  "opacity": "0",
                                }
                              }
                              tabIndex={-1}
                            >
                              <Paper
                                className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                classes={
                                  Object {
                                    "root": "MuiPaper-root-10",
                                    "rounded": "MuiPaper-rounded-11",
                                    "shadow0": "MuiPaper-shadow0-12",
                                    "shadow1": "MuiPaper-shadow1-13",
                                    "shadow10": "MuiPaper-shadow10-22",
                                    "shadow11": "MuiPaper-shadow11-23",
                                    "shadow12": "MuiPaper-shadow12-24",
                                    "shadow13": "MuiPaper-shadow13-25",
                                    "shadow14": "MuiPaper-shadow14-26",
                                    "shadow15": "MuiPaper-shadow15-27",
                                    "shadow16": "MuiPaper-shadow16-28",
                                    "shadow17": "MuiPaper-shadow17-29",
                                    "shadow18": "MuiPaper-shadow18-30",
                                    "shadow19": "MuiPaper-shadow19-31",
                                    "shadow2": "MuiPaper-shadow2-14",
                                    "shadow20": "MuiPaper-shadow20-32",
                                    "shadow21": "MuiPaper-shadow21-33",
                                    "shadow22": "MuiPaper-shadow22-34",
                                    "shadow23": "MuiPaper-shadow23-35",
                                    "shadow24": "MuiPaper-shadow24-36",
                                    "shadow3": "MuiPaper-shadow3-15",
                                    "shadow4": "MuiPaper-shadow4-16",
                                    "shadow5": "MuiPaper-shadow5-17",
                                    "shadow6": "MuiPaper-shadow6-18",
                                    "shadow7": "MuiPaper-shadow7-19",
                                    "shadow8": "MuiPaper-shadow8-20",
                                    "shadow9": "MuiPaper-shadow9-21",
                                  }
                                }
                                component="div"
                                elevation={24}
                                role="document"
                                square={false}
                                style={
                                  Object {
                                    "opacity": "0",
                                  }
                                }
                                tabIndex={-1}
                              >
                                <div
                                  className="MuiPaper-root-10 MuiPaper-shadow24-36 MuiPaper-rounded-11 MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                  role="document"
                                  style={
                                    Object {
                                      "opacity": "0",
                                    }
                                  }
                                  tabIndex={-1}
                                >
                                  <withStyles(DialogTitle)>
                                    <DialogTitle
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root-100",
                                        }
                                      }
                                      disableTypography={false}
                                    >
                                      <div
                                        className="MuiDialogTitle-root-100"
                                      >
                                        <withStyles(Typography)
                                          type="title"
                                        >
                                          <Typography
                                            align="inherit"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter-57",
                                                "alignJustify": "MuiTypography-alignJustify-59",
                                                "alignLeft": "MuiTypography-alignLeft-56",
                                                "alignRight": "MuiTypography-alignRight-58",
                                                "body1": "MuiTypography-body1-53",
                                                "body2": "MuiTypography-body2-52",
                                                "button": "MuiTypography-button-55",
                                                "caption": "MuiTypography-caption-54",
                                                "colorAccent": "MuiTypography-colorAccent-66",
                                                "colorError": "MuiTypography-colorError-67",
                                                "colorInherit": "MuiTypography-colorInherit-63",
                                                "colorPrimary": "MuiTypography-colorPrimary-64",
                                                "colorSecondary": "MuiTypography-colorSecondary-65",
                                                "display1": "MuiTypography-display1-48",
                                                "display2": "MuiTypography-display2-47",
                                                "display3": "MuiTypography-display3-46",
                                                "display4": "MuiTypography-display4-45",
                                                "gutterBottom": "MuiTypography-gutterBottom-61",
                                                "headline": "MuiTypography-headline-49",
                                                "noWrap": "MuiTypography-noWrap-60",
                                                "paragraph": "MuiTypography-paragraph-62",
                                                "root": "MuiTypography-root-44",
                                                "subheading": "MuiTypography-subheading-51",
                                                "title": "MuiTypography-title-50",
                                              }
                                            }
                                            color="default"
                                            gutterBottom={false}
                                            headlineMapping={
                                              Object {
                                                "body1": "p",
                                                "body2": "aside",
                                                "display1": "h1",
                                                "display2": "h1",
                                                "display3": "h1",
                                                "display4": "h1",
                                                "headline": "h1",
                                                "subheading": "h3",
                                                "title": "h2",
                                              }
                                            }
                                            noWrap={false}
                                            paragraph={false}
                                            type="title"
                                          >
                                            <h2
                                              className="MuiTypography-root-44 MuiTypography-title-50"
                                            >
                                              Are you sure?
                                            </h2>
                                          </Typography>
                                        </withStyles(Typography)>
                                      </div>
                                    </DialogTitle>
                                  </withStyles(DialogTitle)>
                                  <withStyles(DialogContent)>
                                    <DialogContent
                                      classes={
                                        Object {
                                          "root": "MuiDialogContent-root-101",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root-101"
                                      >
                                        <withStyles(DialogContentText)>
                                          <DialogContentText
                                            classes={
                                              Object {
                                                "root": "MuiDialogContentText-root-102",
                                              }
                                            }
                                          >
                                            <p
                                              className="MuiDialogContentText-root-102"
                                            >
                                              Are you sure you want to delete the bucket forever?
                                            </p>
                                          </DialogContentText>
                                        </withStyles(DialogContentText)>
                                      </div>
                                    </DialogContent>
                                  </withStyles(DialogContent)>
                                  <withStyles(DialogActions)>
                                    <DialogActions
                                      classes={
                                        Object {
                                          "action": "MuiDialogActions-action-104",
                                          "button": "MuiDialogActions-button-105",
                                          "root": "MuiDialogActions-root-103",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root-103"
                                      >
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".0"
                                        >
                                          <withStyles(Button)
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="keep"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="keep"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="keep"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="keep"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="keep"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Keep it
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                        <div
                                          className="MuiDialogActions-action-104"
                                          key=".1"
                                        >
                                          <withStyles(Button)
                                            autoFocus={true}
                                            className="MuiDialogActions-button-105"
                                            color="primary"
                                            id="delete2"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              autoFocus={true}
                                              className="MuiDialogActions-button-105"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit-80",
                                                  "dense": "MuiButton-dense-75",
                                                  "disabled": "MuiButton-disabled-86",
                                                  "fab": "MuiButton-fab-87",
                                                  "flatAccent": "MuiButton-flatAccent-78",
                                                  "flatContrast": "MuiButton-flatContrast-79",
                                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                                  "label": "MuiButton-label-76",
                                                  "raised": "MuiButton-raised-81",
                                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                                  "root": "MuiButton-root-74",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              id="delete2"
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                autoFocus={true}
                                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                id="delete2"
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  autoFocus={true}
                                                  centerRipple={false}
                                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-89",
                                                      "root": "MuiButtonBase-root-88",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  id="delete2"
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    autoFocus={true}
                                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiDialogActions-button-105"
                                                    disabled={false}
                                                    id="delete2"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-76"
                                                    >
                                                      Delete
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "ripple": "MuiTouchRipple-ripple-94",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                                            "root": "MuiTouchRipple-root-90",
                                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-90"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-90"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                      </div>
                                    </DialogActions>
                                  </withStyles(DialogActions)>
                                </div>
                              </Paper>
                            </withStyles(Paper)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                    </div>
                  </Portal>
                </Modal>
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
          <InvestBucket
            attributes={
              Object {
                "bad": Array [],
                "good": Array [],
              }
            }
            deleteFunc={[Function]}
            editCompositionFunc={[Function]}
            editFunc={[Function]}
            investFunc={[Function]}
            seeMoreFunc={null}
            title="Bucket name"
          >
            <Card
              raised={false}
            >
              <withStyles(Paper)
                elevation={2}
              >
                <Paper
                  classes={
                    Object {
                      "root": "MuiPaper-root-10",
                      "rounded": "MuiPaper-rounded-11",
                      "shadow0": "MuiPaper-shadow0-12",
                      "shadow1": "MuiPaper-shadow1-13",
                      "shadow10": "MuiPaper-shadow10-22",
                      "shadow11": "MuiPaper-shadow11-23",
                      "shadow12": "MuiPaper-shadow12-24",
                      "shadow13": "MuiPaper-shadow13-25",
                      "shadow14": "MuiPaper-shadow14-26",
                      "shadow15": "MuiPaper-shadow15-27",
                      "shadow16": "MuiPaper-shadow16-28",
                      "shadow17": "MuiPaper-shadow17-29",
                      "shadow18": "MuiPaper-shadow18-30",
                      "shadow19": "MuiPaper-shadow19-31",
                      "shadow2": "MuiPaper-shadow2-14",
                      "shadow20": "MuiPaper-shadow20-32",
                      "shadow21": "MuiPaper-shadow21-33",
                      "shadow22": "MuiPaper-shadow22-34",
                      "shadow23": "MuiPaper-shadow23-35",
                      "shadow24": "MuiPaper-shadow24-36",
                      "shadow3": "MuiPaper-shadow3-15",
                      "shadow4": "MuiPaper-shadow4-16",
                      "shadow5": "MuiPaper-shadow5-17",
                      "shadow6": "MuiPaper-shadow6-18",
                      "shadow7": "MuiPaper-shadow7-19",
                      "shadow8": "MuiPaper-shadow8-20",
                      "shadow9": "MuiPaper-shadow9-21",
                    }
                  }
                  component="div"
                  elevation={2}
                  square={false}
                >
                  <div
                    className="MuiPaper-root-10 MuiPaper-shadow2-14 MuiPaper-rounded-11"
                  >
                    <withStyles(CardHeader)
                      title="Bucket name"
                    >
                      <CardHeader
                        classes={
                          Object {
                            "action": "MuiCardHeader-action-39",
                            "avatar": "MuiCardHeader-avatar-38",
                            "content": "MuiCardHeader-content-40",
                            "root": "MuiCardHeader-root-37",
                            "subheader": "MuiCardHeader-subheader-42",
                            "title": "MuiCardHeader-title-41",
                          }
                        }
                        title="Bucket name"
                      >
                        <withStyles(CardContent)
                          className="MuiCardHeader-root-37"
                        >
                          <CardContent
                            className="MuiCardHeader-root-37"
                            classes={
                              Object {
                                "root": "MuiCardContent-root-43",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root-43 MuiCardHeader-root-37"
                            >
                              <div
                                className="MuiCardHeader-content-40"
                              >
                                <withStyles(Typography)
                                  className="MuiCardHeader-title-41"
                                  component="span"
                                  type="headline"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-title-41"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="headline"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-headline-49 MuiCardHeader-title-41"
                                    >
                                      Bucket name
                                    </span>
                                  </Typography>
                                </withStyles(Typography)>
                                <withStyles(Typography)
                                  className="MuiCardHeader-subheader-42"
                                  color="secondary"
                                  component="span"
                                  type="body1"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-subheader-42"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="secondary"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="body1"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-body1-53 MuiTypography-colorSecondary-65 MuiCardHeader-subheader-42"
                                    />
                                  </Typography>
                                </withStyles(Typography)>
                              </div>
                            </div>
                          </CardContent>
                        </withStyles(CardContent)>
                      </CardHeader>
                    </withStyles(CardHeader)>
                    <withStyles(CardContent)>
                      <CardContent
                        classes={
                          Object {
                            "root": "MuiCardContent-root-43",
                          }
                        }
                      >
                        <div
                          className="MuiCardContent-root-43"
                        >
                          <withStyles(List)>
                            <List
                              classes={
                                Object {
                                  "dense": "MuiList-dense-70",
                                  "padding": "MuiList-padding-69",
                                  "root": "MuiList-root-68",
                                  "subheader": "MuiList-subheader-71",
                                }
                              }
                              component="ul"
                              dense={false}
                              disablePadding={false}
                            >
                              <ul
                                className="MuiList-root-68 MuiList-padding-69"
                              />
                            </List>
                          </withStyles(List)>
                          <withStyles(Button)
                            aria-label="add"
                            color="primary"
                            fab={true}
                            id="launch-edit"
                            onClick={[Function]}
                          >
                            <Button
                              aria-label="add"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={false}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={true}
                              id="launch-edit"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                aria-label="add"
                                className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="launch-edit"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  aria-label="add"
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="launch-edit"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    aria-label="add"
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                    disabled={false}
                                    id="launch-edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      <pure(Add)>
                                        <Add>
                                          <withStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "root": "MuiSvgIcon-root-97",
                                                }
                                              }
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-97"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </withStyles(SvgIcon)>
                                        </Add>
                                      </pure(Add)>
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardContent>
                    </withStyles(CardContent)>
                    <withStyles(CardActions)>
                      <CardActions
                        classes={
                          Object {
                            "action": "MuiCardActions-action-73",
                            "root": "MuiCardActions-root-72",
                          }
                        }
                        disableActionSpacing={false}
                      >
                        <div
                          className="MuiCardActions-root-72"
                        >
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            key=".0"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Invest
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="delete"
                            key=".1"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="delete"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="delete"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="delete"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Delete
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="edit-comp"
                            key=".2"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="edit-comp"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="edit-comp"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="edit-comp"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="edit-comp"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Composition
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardActions>
                    </withStyles(CardActions)>
                  </div>
                </Paper>
              </withStyles(Paper)>
            </Card>
          </InvestBucket>
        </div>
      </InvestBucketRelay>
    </Relay(InvestBucketRelay)>
  </div>
</CtxProvider>
`;

exports[`InvestBucketRelay render minimal 1`] = `
<CtxProvider>
  <div>
    <Relay(InvestBucketRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestBucketRelay_bucket": Object {},
          },
          "__id": "1",
          "description": null,
          "id": "1",
          "isOwner": false,
          "name": "Bucket name",
          "public": true,
        }
      }
    >
      <InvestBucketRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestBucketRelay_bucket": Object {},
            },
            "__id": "1",
            "description": null,
            "id": "1",
            "isOwner": false,
            "name": "Bucket name",
            "public": true,
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment1",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": 2,
                              "kind": "LocalArgument",
                              "name": "first",
                              "type": "Int!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": Object {
                            "connection": Array [
                              Object {
                                "count": "first",
                                "cursor": null,
                                "direction": "forward",
                                "path": Array [
                                  "description",
                                ],
                              },
                            ],
                          },
                          "name": "InvestBucketRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "name",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "public",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "isOwner",
                              "storageKey": null,
                            },
                            Object {
                              "alias": "description",
                              "args": null,
                              "concreteType": "GInvestmentBucketAttributeConnection",
                              "kind": "LinkedField",
                              "name": "__InvestBucketRelay_description_connection",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentBucketAttributeEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentBucketAttribute",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "id",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "text",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "isGood",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "__typename",
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "cursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "PageInfo",
                                  "kind": "LinkedField",
                                  "name": "pageInfo",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "hasNextPage",
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "endCursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {
                          "first": 2,
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": 2,
                            "kind": "LocalArgument",
                            "name": "first",
                            "type": "Int!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": Object {
                          "connection": Array [
                            Object {
                              "count": "first",
                              "cursor": null,
                              "direction": "forward",
                              "path": Array [
                                "description",
                              ],
                            },
                          ],
                        },
                        "name": "InvestBucketRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "name",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "public",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "isOwner",
                            "storageKey": null,
                          },
                          Object {
                            "alias": "description",
                            "args": null,
                            "concreteType": "GInvestmentBucketAttributeConnection",
                            "kind": "LinkedField",
                            "name": "__InvestBucketRelay_description_connection",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentBucketAttributeEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentBucketAttribute",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "id",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "text",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "isGood",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "__typename",
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "cursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "PageInfo",
                                "kind": "LinkedField",
                                "name": "pageInfo",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "hasNextPage",
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "endCursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {
                        "first": 2,
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <div>
          <withStyles(Dialog)
            id="dialog1"
            onRequestClose={[Function]}
            open={false}
          >
            <Dialog
              classes={
                Object {
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              id="dialog1"
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              onRequestClose={[Function]}
              open={false}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                BackdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                id="dialog1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                onRequestClose={[Function]}
                show={false}
              >
                <Modal
                  BackdropComponent={[Function]}
                  BackdropInvisible={false}
                  BackdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  id="dialog1"
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  onRequestClose={[Function]}
                  show={false}
                />
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
          <InvestBucket
            attributes={
              Object {
                "bad": Array [],
                "good": Array [],
              }
            }
            deleteFunc={null}
            editCompositionFunc={null}
            editFunc={null}
            investFunc={[Function]}
            seeMoreFunc={null}
            title="Bucket name"
          >
            <Card
              raised={false}
            >
              <withStyles(Paper)
                elevation={2}
              >
                <Paper
                  classes={
                    Object {
                      "root": "MuiPaper-root-10",
                      "rounded": "MuiPaper-rounded-11",
                      "shadow0": "MuiPaper-shadow0-12",
                      "shadow1": "MuiPaper-shadow1-13",
                      "shadow10": "MuiPaper-shadow10-22",
                      "shadow11": "MuiPaper-shadow11-23",
                      "shadow12": "MuiPaper-shadow12-24",
                      "shadow13": "MuiPaper-shadow13-25",
                      "shadow14": "MuiPaper-shadow14-26",
                      "shadow15": "MuiPaper-shadow15-27",
                      "shadow16": "MuiPaper-shadow16-28",
                      "shadow17": "MuiPaper-shadow17-29",
                      "shadow18": "MuiPaper-shadow18-30",
                      "shadow19": "MuiPaper-shadow19-31",
                      "shadow2": "MuiPaper-shadow2-14",
                      "shadow20": "MuiPaper-shadow20-32",
                      "shadow21": "MuiPaper-shadow21-33",
                      "shadow22": "MuiPaper-shadow22-34",
                      "shadow23": "MuiPaper-shadow23-35",
                      "shadow24": "MuiPaper-shadow24-36",
                      "shadow3": "MuiPaper-shadow3-15",
                      "shadow4": "MuiPaper-shadow4-16",
                      "shadow5": "MuiPaper-shadow5-17",
                      "shadow6": "MuiPaper-shadow6-18",
                      "shadow7": "MuiPaper-shadow7-19",
                      "shadow8": "MuiPaper-shadow8-20",
                      "shadow9": "MuiPaper-shadow9-21",
                    }
                  }
                  component="div"
                  elevation={2}
                  square={false}
                >
                  <div
                    className="MuiPaper-root-10 MuiPaper-shadow2-14 MuiPaper-rounded-11"
                  >
                    <withStyles(CardHeader)
                      title="Bucket name"
                    >
                      <CardHeader
                        classes={
                          Object {
                            "action": "MuiCardHeader-action-39",
                            "avatar": "MuiCardHeader-avatar-38",
                            "content": "MuiCardHeader-content-40",
                            "root": "MuiCardHeader-root-37",
                            "subheader": "MuiCardHeader-subheader-42",
                            "title": "MuiCardHeader-title-41",
                          }
                        }
                        title="Bucket name"
                      >
                        <withStyles(CardContent)
                          className="MuiCardHeader-root-37"
                        >
                          <CardContent
                            className="MuiCardHeader-root-37"
                            classes={
                              Object {
                                "root": "MuiCardContent-root-43",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root-43 MuiCardHeader-root-37"
                            >
                              <div
                                className="MuiCardHeader-content-40"
                              >
                                <withStyles(Typography)
                                  className="MuiCardHeader-title-41"
                                  component="span"
                                  type="headline"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-title-41"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="headline"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-headline-49 MuiCardHeader-title-41"
                                    >
                                      Bucket name
                                    </span>
                                  </Typography>
                                </withStyles(Typography)>
                                <withStyles(Typography)
                                  className="MuiCardHeader-subheader-42"
                                  color="secondary"
                                  component="span"
                                  type="body1"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-subheader-42"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="secondary"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="body1"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-body1-53 MuiTypography-colorSecondary-65 MuiCardHeader-subheader-42"
                                    />
                                  </Typography>
                                </withStyles(Typography)>
                              </div>
                            </div>
                          </CardContent>
                        </withStyles(CardContent)>
                      </CardHeader>
                    </withStyles(CardHeader)>
                    <withStyles(CardContent)>
                      <CardContent
                        classes={
                          Object {
                            "root": "MuiCardContent-root-43",
                          }
                        }
                      >
                        <div
                          className="MuiCardContent-root-43"
                        >
                          <withStyles(List)>
                            <List
                              classes={
                                Object {
                                  "dense": "MuiList-dense-70",
                                  "padding": "MuiList-padding-69",
                                  "root": "MuiList-root-68",
                                  "subheader": "MuiList-subheader-71",
                                }
                              }
                              component="ul"
                              dense={false}
                              disablePadding={false}
                            >
                              <ul
                                className="MuiList-root-68 MuiList-padding-69"
                              />
                            </List>
                          </withStyles(List)>
                        </div>
                      </CardContent>
                    </withStyles(CardContent)>
                    <withStyles(CardActions)>
                      <CardActions
                        classes={
                          Object {
                            "action": "MuiCardActions-action-73",
                            "root": "MuiCardActions-root-72",
                          }
                        }
                        disableActionSpacing={false}
                      >
                        <div
                          className="MuiCardActions-root-72"
                        >
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            key=".0"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Invest
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardActions>
                    </withStyles(CardActions)>
                  </div>
                </Paper>
              </withStyles(Paper)>
            </Card>
          </InvestBucket>
        </div>
      </InvestBucketRelay>
    </Relay(InvestBucketRelay)>
  </div>
</CtxProvider>
`;

exports[`InvestBucketRelay render owner 1`] = `
<CtxProvider>
  <div>
    <Relay(InvestBucketRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestBucketRelay_bucket": Object {},
          },
          "__id": "1",
          "description": Object {
            "edges": Array [
              Object {
                "node": Object {
                  "id": "2",
                  "isGood": true,
                  "text": "my text",
                },
              },
              Object {
                "node": Object {
                  "id": "3",
                  "isGood": false,
                  "text": "my bad text",
                },
              },
              null,
            ],
            "pageInfo": Object {
              "hasNextPage": false,
            },
          },
          "id": "1",
          "isOwner": true,
          "name": "Bucket name",
          "public": false,
        }
      }
    >
      <InvestBucketRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestBucketRelay_bucket": Object {},
            },
            "__id": "1",
            "description": Object {
              "edges": Array [
                Object {
                  "node": Object {
                    "id": "2",
                    "isGood": true,
                    "text": "my text",
                  },
                },
                Object {
                  "node": Object {
                    "id": "3",
                    "isGood": false,
                    "text": "my bad text",
                  },
                },
                null,
              ],
              "pageInfo": Object {
                "hasNextPage": false,
              },
            },
            "id": "1",
            "isOwner": true,
            "name": "Bucket name",
            "public": false,
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment3",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": 2,
                              "kind": "LocalArgument",
                              "name": "first",
                              "type": "Int!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": Object {
                            "connection": Array [
                              Object {
                                "count": "first",
                                "cursor": null,
                                "direction": "forward",
                                "path": Array [
                                  "description",
                                ],
                              },
                            ],
                          },
                          "name": "InvestBucketRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "name",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "public",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "isOwner",
                              "storageKey": null,
                            },
                            Object {
                              "alias": "description",
                              "args": null,
                              "concreteType": "GInvestmentBucketAttributeConnection",
                              "kind": "LinkedField",
                              "name": "__InvestBucketRelay_description_connection",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentBucketAttributeEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentBucketAttribute",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "id",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "text",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "isGood",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "__typename",
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "cursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "PageInfo",
                                  "kind": "LinkedField",
                                  "name": "pageInfo",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "hasNextPage",
                                      "storageKey": null,
                                    },
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "endCursor",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {
                          "first": 2,
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": 2,
                            "kind": "LocalArgument",
                            "name": "first",
                            "type": "Int!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": Object {
                          "connection": Array [
                            Object {
                              "count": "first",
                              "cursor": null,
                              "direction": "forward",
                              "path": Array [
                                "description",
                              ],
                            },
                          ],
                        },
                        "name": "InvestBucketRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "name",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "public",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "isOwner",
                            "storageKey": null,
                          },
                          Object {
                            "alias": "description",
                            "args": null,
                            "concreteType": "GInvestmentBucketAttributeConnection",
                            "kind": "LinkedField",
                            "name": "__InvestBucketRelay_description_connection",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentBucketAttributeEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentBucketAttribute",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "id",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "text",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "isGood",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "__typename",
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "cursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "PageInfo",
                                "kind": "LinkedField",
                                "name": "pageInfo",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "hasNextPage",
                                    "storageKey": null,
                                  },
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "endCursor",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {
                        "first": 2,
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <div>
          <withStyles(Dialog)
            id="dialog1"
            onRequestClose={[Function]}
            open={false}
          >
            <Dialog
              classes={
                Object {
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              id="dialog1"
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              onRequestClose={[Function]}
              open={false}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                BackdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                id="dialog1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                onRequestClose={[Function]}
                show={false}
              >
                <Modal
                  BackdropComponent={[Function]}
                  BackdropInvisible={false}
                  BackdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  id="dialog1"
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  onRequestClose={[Function]}
                  show={false}
                />
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
          <InvestBucket
            attributes={
              Object {
                "bad": Array [
                  Object {
                    "editMode": false,
                    "icon": Object {
                      "onClick": [Function],
                    },
                    "id": "3",
                    "isGood": false,
                    "shortDesc": "my bad text",
                    "text": Object {
                      "onClick": [Function],
                    },
                  },
                ],
                "good": Array [
                  Object {
                    "editMode": false,
                    "icon": Object {
                      "onClick": [Function],
                    },
                    "id": "2",
                    "isGood": true,
                    "shortDesc": "my text",
                    "text": Object {
                      "onClick": [Function],
                    },
                  },
                ],
              }
            }
            deleteFunc={[Function]}
            editCompositionFunc={[Function]}
            editFunc={[Function]}
            investFunc={[Function]}
            seeMoreFunc={null}
            title={
              <div>
                Bucket name
                <pure(Lock) />
              </div>
            }
          >
            <Card
              raised={false}
            >
              <withStyles(Paper)
                elevation={2}
              >
                <Paper
                  classes={
                    Object {
                      "root": "MuiPaper-root-10",
                      "rounded": "MuiPaper-rounded-11",
                      "shadow0": "MuiPaper-shadow0-12",
                      "shadow1": "MuiPaper-shadow1-13",
                      "shadow10": "MuiPaper-shadow10-22",
                      "shadow11": "MuiPaper-shadow11-23",
                      "shadow12": "MuiPaper-shadow12-24",
                      "shadow13": "MuiPaper-shadow13-25",
                      "shadow14": "MuiPaper-shadow14-26",
                      "shadow15": "MuiPaper-shadow15-27",
                      "shadow16": "MuiPaper-shadow16-28",
                      "shadow17": "MuiPaper-shadow17-29",
                      "shadow18": "MuiPaper-shadow18-30",
                      "shadow19": "MuiPaper-shadow19-31",
                      "shadow2": "MuiPaper-shadow2-14",
                      "shadow20": "MuiPaper-shadow20-32",
                      "shadow21": "MuiPaper-shadow21-33",
                      "shadow22": "MuiPaper-shadow22-34",
                      "shadow23": "MuiPaper-shadow23-35",
                      "shadow24": "MuiPaper-shadow24-36",
                      "shadow3": "MuiPaper-shadow3-15",
                      "shadow4": "MuiPaper-shadow4-16",
                      "shadow5": "MuiPaper-shadow5-17",
                      "shadow6": "MuiPaper-shadow6-18",
                      "shadow7": "MuiPaper-shadow7-19",
                      "shadow8": "MuiPaper-shadow8-20",
                      "shadow9": "MuiPaper-shadow9-21",
                    }
                  }
                  component="div"
                  elevation={2}
                  square={false}
                >
                  <div
                    className="MuiPaper-root-10 MuiPaper-shadow2-14 MuiPaper-rounded-11"
                  >
                    <withStyles(CardHeader)
                      title={
                        <div>
                          Bucket name
                          <pure(Lock) />
                        </div>
                      }
                    >
                      <CardHeader
                        classes={
                          Object {
                            "action": "MuiCardHeader-action-39",
                            "avatar": "MuiCardHeader-avatar-38",
                            "content": "MuiCardHeader-content-40",
                            "root": "MuiCardHeader-root-37",
                            "subheader": "MuiCardHeader-subheader-42",
                            "title": "MuiCardHeader-title-41",
                          }
                        }
                        title={
                          <div>
                            Bucket name
                            <pure(Lock) />
                          </div>
                        }
                      >
                        <withStyles(CardContent)
                          className="MuiCardHeader-root-37"
                        >
                          <CardContent
                            className="MuiCardHeader-root-37"
                            classes={
                              Object {
                                "root": "MuiCardContent-root-43",
                              }
                            }
                          >
                            <div
                              className="MuiCardContent-root-43 MuiCardHeader-root-37"
                            >
                              <div
                                className="MuiCardHeader-content-40"
                              >
                                <withStyles(Typography)
                                  className="MuiCardHeader-title-41"
                                  component="span"
                                  type="headline"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-title-41"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="default"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="headline"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-headline-49 MuiCardHeader-title-41"
                                    >
                                      <div>
                                        Bucket name
                                        <pure(Lock)>
                                          <Lock>
                                            <withStyles(SvgIcon)>
                                              <SvgIcon
                                                classes={
                                                  Object {
                                                    "root": "MuiSvgIcon-root-97",
                                                  }
                                                }
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root-97"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
                                                  />
                                                </svg>
                                              </SvgIcon>
                                            </withStyles(SvgIcon)>
                                          </Lock>
                                        </pure(Lock)>
                                      </div>
                                    </span>
                                  </Typography>
                                </withStyles(Typography)>
                                <withStyles(Typography)
                                  className="MuiCardHeader-subheader-42"
                                  color="secondary"
                                  component="span"
                                  type="body1"
                                >
                                  <Typography
                                    align="inherit"
                                    className="MuiCardHeader-subheader-42"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter-57",
                                        "alignJustify": "MuiTypography-alignJustify-59",
                                        "alignLeft": "MuiTypography-alignLeft-56",
                                        "alignRight": "MuiTypography-alignRight-58",
                                        "body1": "MuiTypography-body1-53",
                                        "body2": "MuiTypography-body2-52",
                                        "button": "MuiTypography-button-55",
                                        "caption": "MuiTypography-caption-54",
                                        "colorAccent": "MuiTypography-colorAccent-66",
                                        "colorError": "MuiTypography-colorError-67",
                                        "colorInherit": "MuiTypography-colorInherit-63",
                                        "colorPrimary": "MuiTypography-colorPrimary-64",
                                        "colorSecondary": "MuiTypography-colorSecondary-65",
                                        "display1": "MuiTypography-display1-48",
                                        "display2": "MuiTypography-display2-47",
                                        "display3": "MuiTypography-display3-46",
                                        "display4": "MuiTypography-display4-45",
                                        "gutterBottom": "MuiTypography-gutterBottom-61",
                                        "headline": "MuiTypography-headline-49",
                                        "noWrap": "MuiTypography-noWrap-60",
                                        "paragraph": "MuiTypography-paragraph-62",
                                        "root": "MuiTypography-root-44",
                                        "subheading": "MuiTypography-subheading-51",
                                        "title": "MuiTypography-title-50",
                                      }
                                    }
                                    color="secondary"
                                    component="span"
                                    gutterBottom={false}
                                    headlineMapping={
                                      Object {
                                        "body1": "p",
                                        "body2": "aside",
                                        "display1": "h1",
                                        "display2": "h1",
                                        "display3": "h1",
                                        "display4": "h1",
                                        "headline": "h1",
                                        "subheading": "h3",
                                        "title": "h2",
                                      }
                                    }
                                    noWrap={false}
                                    paragraph={false}
                                    type="body1"
                                  >
                                    <span
                                      className="MuiTypography-root-44 MuiTypography-body1-53 MuiTypography-colorSecondary-65 MuiCardHeader-subheader-42"
                                    />
                                  </Typography>
                                </withStyles(Typography)>
                              </div>
                            </div>
                          </CardContent>
                        </withStyles(CardContent)>
                      </CardHeader>
                    </withStyles(CardHeader)>
                    <withStyles(CardContent)>
                      <CardContent
                        classes={
                          Object {
                            "root": "MuiCardContent-root-43",
                          }
                        }
                      >
                        <div
                          className="MuiCardContent-root-43"
                        >
                          <withStyles(List)>
                            <List
                              classes={
                                Object {
                                  "dense": "MuiList-dense-70",
                                  "padding": "MuiList-padding-69",
                                  "root": "MuiList-root-68",
                                  "subheader": "MuiList-subheader-71",
                                }
                              }
                              component="ul"
                              dense={false}
                              disablePadding={false}
                            >
                              <ul
                                className="MuiList-root-68 MuiList-padding-69"
                              >
                                <withStyles(ListItem)
                                  key="2"
                                >
                                  <ListItem
                                    button={false}
                                    classes={
                                      Object {
                                        "button": "MuiListItem-button-114",
                                        "container": "MuiListItem-container-107",
                                        "default": "MuiListItem-default-109",
                                        "dense": "MuiListItem-dense-110",
                                        "disabled": "MuiListItem-disabled-111",
                                        "divider": "MuiListItem-divider-112",
                                        "gutters": "MuiListItem-gutters-113",
                                        "keyboardFocused": "MuiListItem-keyboardFocused-108",
                                        "root": "MuiListItem-root-106",
                                        "secondaryAction": "MuiListItem-secondaryAction-115",
                                      }
                                    }
                                    component="li"
                                    dense={false}
                                    disableGutters={false}
                                    disabled={false}
                                    divider={false}
                                  >
                                    <li
                                      className="MuiListItem-root-106 MuiListItem-gutters-113 MuiListItem-default-109"
                                      disabled={false}
                                    >
                                      <withStyles(ListItemIcon)
                                        key=".0"
                                        onClick={[Function]}
                                      >
                                        <ListItemIcon
                                          classes={
                                            Object {
                                              "root": "MuiListItemIcon-root-116",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <pure(TrendingUp)
                                            className="MuiListItemIcon-root-116"
                                            onClick={[Function]}
                                          >
                                            <TrendingUp
                                              className="MuiListItemIcon-root-116"
                                              onClick={[Function]}
                                            >
                                              <withStyles(SvgIcon)
                                                className="MuiListItemIcon-root-116"
                                                onClick={[Function]}
                                              >
                                                <SvgIcon
                                                  className="MuiListItemIcon-root-116"
                                                  classes={
                                                    Object {
                                                      "root": "MuiSvgIcon-root-97",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root-97 MuiListItemIcon-root-116"
                                                    focusable="false"
                                                    onClick={[Function]}
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z"
                                                    />
                                                  </svg>
                                                </SvgIcon>
                                              </withStyles(SvgIcon)>
                                            </TrendingUp>
                                          </pure(TrendingUp)>
                                        </ListItemIcon>
                                      </withStyles(ListItemIcon)>
                                      <withStyles(ListItemText)
                                        autoFocus={true}
                                        id="attr"
                                        key=".$2"
                                        onClick={[Function]}
                                        primary="my text"
                                      >
                                        <ListItemText
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "dense": "MuiListItemText-dense-119",
                                              "inset": "MuiListItemText-inset-118",
                                              "root": "MuiListItemText-root-117",
                                              "text": "MuiListItemText-text-120",
                                              "textDense": "MuiListItemText-textDense-121",
                                            }
                                          }
                                          disableTypography={false}
                                          id="attr"
                                          inset={false}
                                          onClick={[Function]}
                                          primary="my text"
                                          secondary={false}
                                        >
                                          <div
                                            autoFocus={true}
                                            className="MuiListItemText-root-117"
                                            id="attr"
                                            onClick={[Function]}
                                          >
                                            <withStyles(Typography)
                                              className="MuiListItemText-text-120"
                                              type="subheading"
                                            >
                                              <Typography
                                                align="inherit"
                                                className="MuiListItemText-text-120"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter-57",
                                                    "alignJustify": "MuiTypography-alignJustify-59",
                                                    "alignLeft": "MuiTypography-alignLeft-56",
                                                    "alignRight": "MuiTypography-alignRight-58",
                                                    "body1": "MuiTypography-body1-53",
                                                    "body2": "MuiTypography-body2-52",
                                                    "button": "MuiTypography-button-55",
                                                    "caption": "MuiTypography-caption-54",
                                                    "colorAccent": "MuiTypography-colorAccent-66",
                                                    "colorError": "MuiTypography-colorError-67",
                                                    "colorInherit": "MuiTypography-colorInherit-63",
                                                    "colorPrimary": "MuiTypography-colorPrimary-64",
                                                    "colorSecondary": "MuiTypography-colorSecondary-65",
                                                    "display1": "MuiTypography-display1-48",
                                                    "display2": "MuiTypography-display2-47",
                                                    "display3": "MuiTypography-display3-46",
                                                    "display4": "MuiTypography-display4-45",
                                                    "gutterBottom": "MuiTypography-gutterBottom-61",
                                                    "headline": "MuiTypography-headline-49",
                                                    "noWrap": "MuiTypography-noWrap-60",
                                                    "paragraph": "MuiTypography-paragraph-62",
                                                    "root": "MuiTypography-root-44",
                                                    "subheading": "MuiTypography-subheading-51",
                                                    "title": "MuiTypography-title-50",
                                                  }
                                                }
                                                color="default"
                                                gutterBottom={false}
                                                headlineMapping={
                                                  Object {
                                                    "body1": "p",
                                                    "body2": "aside",
                                                    "display1": "h1",
                                                    "display2": "h1",
                                                    "display3": "h1",
                                                    "display4": "h1",
                                                    "headline": "h1",
                                                    "subheading": "h3",
                                                    "title": "h2",
                                                  }
                                                }
                                                noWrap={false}
                                                paragraph={false}
                                                type="subheading"
                                              >
                                                <h3
                                                  className="MuiTypography-root-44 MuiTypography-subheading-51 MuiListItemText-text-120"
                                                >
                                                  my text
                                                </h3>
                                              </Typography>
                                            </withStyles(Typography)>
                                          </div>
                                        </ListItemText>
                                      </withStyles(ListItemText)>
                                    </li>
                                  </ListItem>
                                </withStyles(ListItem)>
                                <withStyles(ListItem)
                                  key="3"
                                >
                                  <ListItem
                                    button={false}
                                    classes={
                                      Object {
                                        "button": "MuiListItem-button-114",
                                        "container": "MuiListItem-container-107",
                                        "default": "MuiListItem-default-109",
                                        "dense": "MuiListItem-dense-110",
                                        "disabled": "MuiListItem-disabled-111",
                                        "divider": "MuiListItem-divider-112",
                                        "gutters": "MuiListItem-gutters-113",
                                        "keyboardFocused": "MuiListItem-keyboardFocused-108",
                                        "root": "MuiListItem-root-106",
                                        "secondaryAction": "MuiListItem-secondaryAction-115",
                                      }
                                    }
                                    component="li"
                                    dense={false}
                                    disableGutters={false}
                                    disabled={false}
                                    divider={false}
                                  >
                                    <li
                                      className="MuiListItem-root-106 MuiListItem-gutters-113 MuiListItem-default-109"
                                      disabled={false}
                                    >
                                      <withStyles(ListItemIcon)
                                        key=".0"
                                        onClick={[Function]}
                                      >
                                        <ListItemIcon
                                          classes={
                                            Object {
                                              "root": "MuiListItemIcon-root-116",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <pure(TrendingDown)
                                            className="MuiListItemIcon-root-116"
                                            onClick={[Function]}
                                          >
                                            <TrendingDown
                                              className="MuiListItemIcon-root-116"
                                              onClick={[Function]}
                                            >
                                              <withStyles(SvgIcon)
                                                className="MuiListItemIcon-root-116"
                                                onClick={[Function]}
                                              >
                                                <SvgIcon
                                                  className="MuiListItemIcon-root-116"
                                                  classes={
                                                    Object {
                                                      "root": "MuiSvgIcon-root-97",
                                                    }
                                                  }
                                                  onClick={[Function]}
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root-97 MuiListItemIcon-root-116"
                                                    focusable="false"
                                                    onClick={[Function]}
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z"
                                                    />
                                                  </svg>
                                                </SvgIcon>
                                              </withStyles(SvgIcon)>
                                            </TrendingDown>
                                          </pure(TrendingDown)>
                                        </ListItemIcon>
                                      </withStyles(ListItemIcon)>
                                      <withStyles(ListItemText)
                                        autoFocus={true}
                                        id="attr"
                                        key=".$3"
                                        onClick={[Function]}
                                        primary="my bad text"
                                      >
                                        <ListItemText
                                          autoFocus={true}
                                          classes={
                                            Object {
                                              "dense": "MuiListItemText-dense-119",
                                              "inset": "MuiListItemText-inset-118",
                                              "root": "MuiListItemText-root-117",
                                              "text": "MuiListItemText-text-120",
                                              "textDense": "MuiListItemText-textDense-121",
                                            }
                                          }
                                          disableTypography={false}
                                          id="attr"
                                          inset={false}
                                          onClick={[Function]}
                                          primary="my bad text"
                                          secondary={false}
                                        >
                                          <div
                                            autoFocus={true}
                                            className="MuiListItemText-root-117"
                                            id="attr"
                                            onClick={[Function]}
                                          >
                                            <withStyles(Typography)
                                              className="MuiListItemText-text-120"
                                              type="subheading"
                                            >
                                              <Typography
                                                align="inherit"
                                                className="MuiListItemText-text-120"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter-57",
                                                    "alignJustify": "MuiTypography-alignJustify-59",
                                                    "alignLeft": "MuiTypography-alignLeft-56",
                                                    "alignRight": "MuiTypography-alignRight-58",
                                                    "body1": "MuiTypography-body1-53",
                                                    "body2": "MuiTypography-body2-52",
                                                    "button": "MuiTypography-button-55",
                                                    "caption": "MuiTypography-caption-54",
                                                    "colorAccent": "MuiTypography-colorAccent-66",
                                                    "colorError": "MuiTypography-colorError-67",
                                                    "colorInherit": "MuiTypography-colorInherit-63",
                                                    "colorPrimary": "MuiTypography-colorPrimary-64",
                                                    "colorSecondary": "MuiTypography-colorSecondary-65",
                                                    "display1": "MuiTypography-display1-48",
                                                    "display2": "MuiTypography-display2-47",
                                                    "display3": "MuiTypography-display3-46",
                                                    "display4": "MuiTypography-display4-45",
                                                    "gutterBottom": "MuiTypography-gutterBottom-61",
                                                    "headline": "MuiTypography-headline-49",
                                                    "noWrap": "MuiTypography-noWrap-60",
                                                    "paragraph": "MuiTypography-paragraph-62",
                                                    "root": "MuiTypography-root-44",
                                                    "subheading": "MuiTypography-subheading-51",
                                                    "title": "MuiTypography-title-50",
                                                  }
                                                }
                                                color="default"
                                                gutterBottom={false}
                                                headlineMapping={
                                                  Object {
                                                    "body1": "p",
                                                    "body2": "aside",
                                                    "display1": "h1",
                                                    "display2": "h1",
                                                    "display3": "h1",
                                                    "display4": "h1",
                                                    "headline": "h1",
                                                    "subheading": "h3",
                                                    "title": "h2",
                                                  }
                                                }
                                                noWrap={false}
                                                paragraph={false}
                                                type="subheading"
                                              >
                                                <h3
                                                  className="MuiTypography-root-44 MuiTypography-subheading-51 MuiListItemText-text-120"
                                                >
                                                  my bad text
                                                </h3>
                                              </Typography>
                                            </withStyles(Typography)>
                                          </div>
                                        </ListItemText>
                                      </withStyles(ListItemText)>
                                    </li>
                                  </ListItem>
                                </withStyles(ListItem)>
                              </ul>
                            </List>
                          </withStyles(List)>
                          <withStyles(Button)
                            aria-label="add"
                            color="primary"
                            fab={true}
                            id="launch-edit"
                            onClick={[Function]}
                          >
                            <Button
                              aria-label="add"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={false}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={true}
                              id="launch-edit"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                aria-label="add"
                                className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="launch-edit"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  aria-label="add"
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="launch-edit"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    aria-label="add"
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-raised-81 MuiButton-fab-87 MuiButton-raisedPrimary-83"
                                    disabled={false}
                                    id="launch-edit"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      <pure(Add)>
                                        <Add>
                                          <withStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "root": "MuiSvgIcon-root-97",
                                                }
                                              }
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-97"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </withStyles(SvgIcon)>
                                        </Add>
                                      </pure(Add)>
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardContent>
                    </withStyles(CardContent)>
                    <withStyles(CardActions)>
                      <CardActions
                        classes={
                          Object {
                            "action": "MuiCardActions-action-73",
                            "root": "MuiCardActions-root-72",
                          }
                        }
                        disableActionSpacing={false}
                      >
                        <div
                          className="MuiCardActions-root-72"
                        >
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            key=".0"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Invest
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="delete"
                            key=".1"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="delete"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="delete"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="delete"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="delete"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Delete
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                          <withStyles(Button)
                            className="MuiCardActions-action-73"
                            color="primary"
                            dense={true}
                            id="edit-comp"
                            key=".2"
                            onClick={[Function]}
                          >
                            <Button
                              className="MuiCardActions-action-73"
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit-80",
                                  "dense": "MuiButton-dense-75",
                                  "disabled": "MuiButton-disabled-86",
                                  "fab": "MuiButton-fab-87",
                                  "flatAccent": "MuiButton-flatAccent-78",
                                  "flatContrast": "MuiButton-flatContrast-79",
                                  "flatPrimary": "MuiButton-flatPrimary-77",
                                  "keyboardFocused": "MuiButton-keyboardFocused-82",
                                  "label": "MuiButton-label-76",
                                  "raised": "MuiButton-raised-81",
                                  "raisedAccent": "MuiButton-raisedAccent-84",
                                  "raisedContrast": "MuiButton-raisedContrast-85",
                                  "raisedPrimary": "MuiButton-raisedPrimary-83",
                                  "root": "MuiButton-root-74",
                                }
                              }
                              color="primary"
                              dense={true}
                              disableFocusRipple={false}
                              disableRipple={false}
                              disabled={false}
                              fab={false}
                              id="edit-comp"
                              onClick={[Function]}
                              raised={false}
                              type="button"
                            >
                              <withStyles(ButtonBase)
                                className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                disableRipple={false}
                                disabled={false}
                                focusRipple={true}
                                id="edit-comp"
                                keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonBase
                                  centerRipple={false}
                                  className="MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-89",
                                      "root": "MuiButtonBase-root-88",
                                    }
                                  }
                                  disableRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  id="edit-comp"
                                  keyboardFocusedClassName="MuiButton-keyboardFocused-82"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root-88 MuiButton-root-74 MuiButton-flatPrimary-77 MuiButton-dense-75 MuiCardActions-action-73"
                                    disabled={false}
                                    id="edit-comp"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label-76"
                                    >
                                      Composition
                                    </span>
                                    <withStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "ripple": "MuiTouchRipple-ripple-94",
                                            "rippleFast": "MuiTouchRipple-rippleFast-96",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-95",
                                            "root": "MuiTouchRipple-root-90",
                                            "wrapper": "MuiTouchRipple-wrapper-91",
                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-92",
                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-93",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-90"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-90"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </withStyles(TouchRipple)>
                                  </button>
                                </ButtonBase>
                              </withStyles(ButtonBase)>
                            </Button>
                          </withStyles(Button)>
                        </div>
                      </CardActions>
                    </withStyles(CardActions)>
                  </div>
                </Paper>
              </withStyles(Paper)>
            </Card>
          </InvestBucket>
        </div>
      </InvestBucketRelay>
    </Relay(InvestBucketRelay)>
  </div>
</CtxProvider>
`;
