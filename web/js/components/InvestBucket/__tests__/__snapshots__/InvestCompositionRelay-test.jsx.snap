// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvestCompositionRelay renders 1`] = `
<CtxProvider>
  <div>
    <Relay(InvestCompositionRelay)
      bucket={
        Object {
          "__fragments": Object {
            "InvestCompositionRelay_bucket": Object {},
          },
          "__id": "1",
          "available": 30,
          "id": "1",
          "stocks": Object {
            "edges": Array [],
          },
        }
      }
      profile={
        Object {
          "__fragments": Object {
            "InvestCompositionRelay_profile": Object {},
          },
          "__id": "2",
          "investSearch": Array [],
        }
      }
    >
      <InvestCompositionRelay
        bucket={
          Object {
            "__fragments": Object {
              "InvestCompositionRelay_bucket": Object {},
            },
            "__id": "1",
            "available": 30,
            "id": "1",
            "stocks": Object {
              "edges": Array [],
            },
          }
        }
        profile={
          Object {
            "__fragments": Object {
              "InvestCompositionRelay_profile": Object {},
            },
            "__id": "2",
            "investSearch": Array [],
          }
        }
        relay={
          Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_debugger": EnvironmentDebugger {
                "_envIsDirty": false,
                "_environment": [Circular],
                "_id": "RelayModernEnvironment1",
                "_isRecordingMutationEvents": false,
                "_recordedMutationEvents": Array [],
              },
              "_network": [Function],
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "1",
                        "node": Object {
                          "argumentDefinitions": Array [],
                          "kind": "Fragment",
                          "metadata": null,
                          "name": "InvestCompositionRelay_bucket",
                          "selections": Array [
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "id",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "kind": "ScalarField",
                              "name": "available",
                              "storageKey": null,
                            },
                            Object {
                              "alias": null,
                              "args": null,
                              "concreteType": "GInvestmentStockConfigurationConnection",
                              "kind": "LinkedField",
                              "name": "stocks",
                              "plural": false,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GInvestmentStockConfigurationEdge",
                                  "kind": "LinkedField",
                                  "name": "edges",
                                  "plural": true,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "concreteType": "GInvestmentStockConfiguration",
                                      "kind": "LinkedField",
                                      "name": "node",
                                      "plural": false,
                                      "selections": Array [
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "kind": "ScalarField",
                                          "name": "quantity",
                                          "storageKey": null,
                                        },
                                        Object {
                                          "alias": null,
                                          "args": null,
                                          "concreteType": "GStock",
                                          "kind": "LinkedField",
                                          "name": "stock",
                                          "plural": false,
                                          "selections": Array [
                                            Object {
                                              "alias": null,
                                              "args": null,
                                              "kind": "ScalarField",
                                              "name": "id",
                                              "storageKey": null,
                                            },
                                            Object {
                                              "alias": null,
                                              "args": null,
                                              "kind": "ScalarField",
                                              "name": "name",
                                              "storageKey": null,
                                            },
                                            Object {
                                              "alias": null,
                                              "args": null,
                                              "concreteType": "GDailyStockQuote",
                                              "kind": "LinkedField",
                                              "name": "latestQuote",
                                              "plural": false,
                                              "selections": Array [
                                                Object {
                                                  "alias": null,
                                                  "args": null,
                                                  "kind": "ScalarField",
                                                  "name": "value",
                                                  "storageKey": null,
                                                },
                                              ],
                                              "storageKey": null,
                                            },
                                          ],
                                          "storageKey": null,
                                        },
                                      ],
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GInvestmentBucket",
                        },
                        "seenRecords": Object {
                          "1": undefined,
                        },
                        "variables": Object {},
                      },
                    },
                    Object {
                      "callback": [Function],
                      "snapshot": Object {
                        "data": undefined,
                        "dataID": "2",
                        "node": Object {
                          "argumentDefinitions": Array [
                            Object {
                              "defaultValue": "",
                              "kind": "LocalArgument",
                              "name": "text",
                              "type": "String!",
                            },
                          ],
                          "kind": "Fragment",
                          "metadata": null,
                          "name": "InvestCompositionRelay_profile",
                          "selections": Array [
                            Object {
                              "alias": "investSearch",
                              "args": Array [
                                Object {
                                  "kind": "Literal",
                                  "name": "first",
                                  "type": "Int",
                                  "value": 4,
                                },
                                Object {
                                  "kind": "Variable",
                                  "name": "text",
                                  "type": "String!",
                                  "variableName": "text",
                                },
                              ],
                              "concreteType": "GStock",
                              "kind": "LinkedField",
                              "name": "stockFind",
                              "plural": true,
                              "selections": Array [
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "kind": "ScalarField",
                                  "name": "name",
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "kind": "ScalarField",
                                  "name": "id",
                                  "storageKey": null,
                                },
                                Object {
                                  "alias": null,
                                  "args": null,
                                  "concreteType": "GDailyStockQuote",
                                  "kind": "LinkedField",
                                  "name": "latestQuote",
                                  "plural": false,
                                  "selections": Array [
                                    Object {
                                      "alias": null,
                                      "args": null,
                                      "kind": "ScalarField",
                                      "name": "value",
                                      "storageKey": null,
                                    },
                                  ],
                                  "storageKey": null,
                                },
                              ],
                              "storageKey": null,
                            },
                          ],
                          "type": "GProfile",
                        },
                        "seenRecords": Object {
                          "2": undefined,
                        },
                        "variables": Object {
                          "text": "",
                        },
                      },
                    },
                  },
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "1",
                      "node": Object {
                        "argumentDefinitions": Array [],
                        "kind": "Fragment",
                        "metadata": null,
                        "name": "InvestCompositionRelay_bucket",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "id",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "kind": "ScalarField",
                            "name": "available",
                            "storageKey": null,
                          },
                          Object {
                            "alias": null,
                            "args": null,
                            "concreteType": "GInvestmentStockConfigurationConnection",
                            "kind": "LinkedField",
                            "name": "stocks",
                            "plural": false,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GInvestmentStockConfigurationEdge",
                                "kind": "LinkedField",
                                "name": "edges",
                                "plural": true,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "concreteType": "GInvestmentStockConfiguration",
                                    "kind": "LinkedField",
                                    "name": "node",
                                    "plural": false,
                                    "selections": Array [
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "kind": "ScalarField",
                                        "name": "quantity",
                                        "storageKey": null,
                                      },
                                      Object {
                                        "alias": null,
                                        "args": null,
                                        "concreteType": "GStock",
                                        "kind": "LinkedField",
                                        "name": "stock",
                                        "plural": false,
                                        "selections": Array [
                                          Object {
                                            "alias": null,
                                            "args": null,
                                            "kind": "ScalarField",
                                            "name": "id",
                                            "storageKey": null,
                                          },
                                          Object {
                                            "alias": null,
                                            "args": null,
                                            "kind": "ScalarField",
                                            "name": "name",
                                            "storageKey": null,
                                          },
                                          Object {
                                            "alias": null,
                                            "args": null,
                                            "concreteType": "GDailyStockQuote",
                                            "kind": "LinkedField",
                                            "name": "latestQuote",
                                            "plural": false,
                                            "selections": Array [
                                              Object {
                                                "alias": null,
                                                "args": null,
                                                "kind": "ScalarField",
                                                "name": "value",
                                                "storageKey": null,
                                              },
                                            ],
                                            "storageKey": null,
                                          },
                                        ],
                                        "storageKey": null,
                                      },
                                    ],
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GInvestmentBucket",
                      },
                      "seenRecords": Object {
                        "1": undefined,
                      },
                      "variables": Object {},
                    },
                  },
                  Object {
                    "callback": [Function],
                    "snapshot": Object {
                      "data": undefined,
                      "dataID": "2",
                      "node": Object {
                        "argumentDefinitions": Array [
                          Object {
                            "defaultValue": "",
                            "kind": "LocalArgument",
                            "name": "text",
                            "type": "String!",
                          },
                        ],
                        "kind": "Fragment",
                        "metadata": null,
                        "name": "InvestCompositionRelay_profile",
                        "selections": Array [
                          Object {
                            "alias": "investSearch",
                            "args": Array [
                              Object {
                                "kind": "Literal",
                                "name": "first",
                                "type": "Int",
                                "value": 4,
                              },
                              Object {
                                "kind": "Variable",
                                "name": "text",
                                "type": "String!",
                                "variableName": "text",
                              },
                            ],
                            "concreteType": "GStock",
                            "kind": "LinkedField",
                            "name": "stockFind",
                            "plural": true,
                            "selections": Array [
                              Object {
                                "alias": null,
                                "args": null,
                                "kind": "ScalarField",
                                "name": "name",
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "kind": "ScalarField",
                                "name": "id",
                                "storageKey": null,
                              },
                              Object {
                                "alias": null,
                                "args": null,
                                "concreteType": "GDailyStockQuote",
                                "kind": "LinkedField",
                                "name": "latestQuote",
                                "plural": false,
                                "selections": Array [
                                  Object {
                                    "alias": null,
                                    "args": null,
                                    "kind": "ScalarField",
                                    "name": "value",
                                    "storageKey": null,
                                  },
                                ],
                                "storageKey": null,
                              },
                            ],
                            "storageKey": null,
                          },
                        ],
                        "type": "GProfile",
                      },
                      "seenRecords": Object {
                        "2": undefined,
                      },
                      "variables": Object {
                        "text": "",
                      },
                    },
                  },
                },
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getOperation": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
            "refetch": [Function],
          }
        }
      >
        <InvestComposition
          cancelFunc={[Function]}
          chunkUpdate={[Function]}
          chunks={Array []}
          saveFunc={[Function]}
          suggestionFieldChange={[Function]}
          suggestions={Array []}
          total={30}
        >
          <withStyles(Dialog)
            open={true}
          >
            <Dialog
              classes={
                Object {
                  ".MuiDialog-paper-2:focus": "MuiDialog-paper-2:focus",
                  "fullScreen": "MuiDialog-fullScreen-7",
                  "fullWidth": "MuiDialog-fullWidth-6",
                  "paper": "MuiDialog-paper-2",
                  "paperWidthMd": "MuiDialog-paperWidthMd-5",
                  "paperWidthSm": "MuiDialog-paperWidthSm-4",
                  "paperWidthXs": "MuiDialog-paperWidthXs-3",
                  "root": "MuiDialog-root-1",
                }
              }
              fullScreen={false}
              fullWidth={false}
              ignoreBackdropClick={false}
              ignoreEscapeKeyUp={false}
              maxWidth="sm"
              open={true}
              transition={[Function]}
              transitionDuration={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
            >
              <withStyles(Modal)
                backdropTransitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
                className="MuiDialog-root-1"
                ignoreBackdropClick={false}
                ignoreEscapeKeyUp={false}
                show={true}
              >
                <Modal
                  backdropComponent={[Function]}
                  backdropInvisible={false}
                  backdropTransitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                  className="MuiDialog-root-1"
                  classes={
                    Object {
                      "hidden": "MuiModal-hidden-9",
                      "root": "MuiModal-root-8",
                    }
                  }
                  disableBackdrop={false}
                  ignoreBackdropClick={false}
                  ignoreEscapeKeyUp={false}
                  keepMounted={false}
                  modalManager={
                    Object {
                      "add": [Function],
                      "isTopModal": [Function],
                      "remove": [Function],
                    }
                  }
                  show={true}
                >
                  <Portal
                    open={true}
                  >
                    <div
                      className="MuiModal-root-8 MuiDialog-root-1"
                    >
                      <withTheme(Fade)
                        in={true}
                        transitionAppear={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          in={true}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 360,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          transitionAppear={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            in={true}
                            onEnter={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            transitionAppear={true}
                            unmountOnExit={false}
                          >
                            <withStyles(Backdrop)
                              className=""
                              invisible={false}
                              onClick={[Function]}
                            >
                              <Backdrop
                                className=""
                                classes={
                                  Object {
                                    "invisible": "MuiBackdrop-invisible-11",
                                    "root": "MuiBackdrop-root-10",
                                  }
                                }
                                invisible={false}
                                onClick={[Function]}
                              >
                                <div
                                  aria-hidden="true"
                                  className="MuiBackdrop-root-10"
                                  onClick={[Function]}
                                />
                              </Backdrop>
                            </withStyles(Backdrop)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                      <withTheme(Fade)
                        in={true}
                        onEnter={null}
                        onEntered={null}
                        onEntering={null}
                        onExit={null}
                        onExited={[Function]}
                        onExiting={null}
                        role="document"
                        tabIndex={-1}
                        transitionAppear={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <Fade
                          in={true}
                          onEnter={null}
                          onEntered={null}
                          onEntering={null}
                          onExit={null}
                          onExited={[Function]}
                          onExiting={null}
                          role="document"
                          tabIndex={-1}
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 360,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                },
                                "background": Object {
                                  "appBar": "#f5f5f5",
                                  "contentFrame": "#eeeeee",
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "darkBlack": "rgba(0, 0, 0, 0.87)",
                                  "darkWhite": "rgba(255, 255, 255, 0.87)",
                                  "faintBlack": "rgba(0, 0, 0, 0.12)",
                                  "fullBlack": "rgba(0, 0, 0, 1)",
                                  "fullWhite": "rgba(255, 255, 255, 1)",
                                  "lightBlack": "rgba(0, 0, 0, 0.54)",
                                  "lightWhite": "rgba(255, 255, 255, 0.54)",
                                  "minBlack": "rgba(0, 0, 0, 0.26)",
                                  "transparent": "rgba(0, 0, 0, 0)",
                                  "white": "#fff",
                                },
                                "error": Object {
                                  "100": "#ffcdd2",
                                  "200": "#ef9a9a",
                                  "300": "#e57373",
                                  "400": "#ef5350",
                                  "50": "#ffebee",
                                  "500": "#f44336",
                                  "600": "#e53935",
                                  "700": "#d32f2f",
                                  "800": "#c62828",
                                  "900": "#b71c1c",
                                  "A100": "#ff8a80",
                                  "A200": "#ff5252",
                                  "A400": "#ff1744",
                                  "A700": "#d50000",
                                  "contrastDefaultColor": "light",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                  "contrastDefaultColor": "dark",
                                },
                                "input": Object {
                                  "bottomLine": "rgba(0, 0, 0, 0.42)",
                                  "disabled": "rgba(0, 0, 0, 0.42)",
                                  "helperText": "rgba(0, 0, 0, 0.54)",
                                  "inputText": "rgba(0, 0, 0, 0.87)",
                                  "labelText": "rgba(0, 0, 0, 0.54)",
                                },
                                "primary": Object {
                                  "100": "#c5cae9",
                                  "200": "#9fa8da",
                                  "300": "#7986cb",
                                  "400": "#5c6bc0",
                                  "50": "#e8eaf6",
                                  "500": "#3f51b5",
                                  "600": "#3949ab",
                                  "700": "#303f9f",
                                  "800": "#283593",
                                  "900": "#1a237e",
                                  "A100": "#8c9eff",
                                  "A200": "#536dfe",
                                  "A400": "#3d5afe",
                                  "A700": "#304ffe",
                                  "contrastDefaultColor": "light",
                                },
                                "secondary": Object {
                                  "100": "#f8bbd0",
                                  "200": "#f48fb1",
                                  "300": "#f06292",
                                  "400": "#ec407a",
                                  "50": "#fce4ec",
                                  "500": "#e91e63",
                                  "600": "#d81b60",
                                  "700": "#c2185b",
                                  "800": "#ad1457",
                                  "900": "#880e4f",
                                  "A100": "#ff80ab",
                                  "A200": "#ff4081",
                                  "A400": "#f50057",
                                  "A700": "#c51162",
                                  "contrastDefaultColor": "light",
                                },
                                "shades": Object {
                                  "dark": Object {
                                    "action": Object {
                                      "active": "rgba(255, 255, 255, 1)",
                                      "disabled": "rgba(255, 255, 255, 0.3)",
                                    },
                                    "background": Object {
                                      "appBar": "#212121",
                                      "contentFrame": "#212121",
                                      "default": "#303030",
                                      "paper": "#424242",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(255, 255, 255, 0.7)",
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "helperText": "rgba(255, 255, 255, 0.7)",
                                      "inputText": "rgba(255, 255, 255, 1)",
                                      "labelText": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(255, 255, 255, 0.5)",
                                      "divider": "rgba(255, 255, 255, 0.12)",
                                      "hint": "rgba(255, 255, 255, 0.5)",
                                      "icon": "rgba(255, 255, 255, 0.5)",
                                      "lightDivider": "rgba(255, 255, 255, 0.075)",
                                      "primary": "rgba(255, 255, 255, 1)",
                                      "secondary": "rgba(255, 255, 255, 0.7)",
                                    },
                                  },
                                  "light": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                    },
                                    "background": Object {
                                      "appBar": "#f5f5f5",
                                      "contentFrame": "#eeeeee",
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "input": Object {
                                      "bottomLine": "rgba(0, 0, 0, 0.42)",
                                      "disabled": "rgba(0, 0, 0, 0.42)",
                                      "helperText": "rgba(0, 0, 0, 0.54)",
                                      "inputText": "rgba(0, 0, 0, 0.87)",
                                      "labelText": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "icon": "rgba(0, 0, 0, 0.38)",
                                      "lightDivider": "rgba(0, 0, 0, 0.075)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "icon": "rgba(0, 0, 0, 0.38)",
                                  "lightDivider": "rgba(0, 0, 0, 0.075)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "type": "light",
                              },
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                  "marginLeft": "-.04em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.06667em",
                                  "marginLeft": "-.04em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.04em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.06em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "mobileStepper": 900,
                                "navDrawer": 1300,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
                          }
                          transitionAppear={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            in={true}
                            onEnter={[Function]}
                            onEntered={null}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={null}
                            role="document"
                            tabIndex={-1}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            transitionAppear={true}
                            unmountOnExit={false}
                          >
                            <withStyles(Paper)
                              className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                              elevation={24}
                              role="document"
                              tabIndex={-1}
                            >
                              <Paper
                                className="MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                classes={
                                  Object {
                                    "root": "MuiPaper-root-12",
                                    "rounded": "MuiPaper-rounded-13",
                                    "shadow0": "MuiPaper-shadow0-14",
                                    "shadow1": "MuiPaper-shadow1-15",
                                    "shadow10": "MuiPaper-shadow10-24",
                                    "shadow11": "MuiPaper-shadow11-25",
                                    "shadow12": "MuiPaper-shadow12-26",
                                    "shadow13": "MuiPaper-shadow13-27",
                                    "shadow14": "MuiPaper-shadow14-28",
                                    "shadow15": "MuiPaper-shadow15-29",
                                    "shadow16": "MuiPaper-shadow16-30",
                                    "shadow17": "MuiPaper-shadow17-31",
                                    "shadow18": "MuiPaper-shadow18-32",
                                    "shadow19": "MuiPaper-shadow19-33",
                                    "shadow2": "MuiPaper-shadow2-16",
                                    "shadow20": "MuiPaper-shadow20-34",
                                    "shadow21": "MuiPaper-shadow21-35",
                                    "shadow22": "MuiPaper-shadow22-36",
                                    "shadow23": "MuiPaper-shadow23-37",
                                    "shadow24": "MuiPaper-shadow24-38",
                                    "shadow3": "MuiPaper-shadow3-17",
                                    "shadow4": "MuiPaper-shadow4-18",
                                    "shadow5": "MuiPaper-shadow5-19",
                                    "shadow6": "MuiPaper-shadow6-20",
                                    "shadow7": "MuiPaper-shadow7-21",
                                    "shadow8": "MuiPaper-shadow8-22",
                                    "shadow9": "MuiPaper-shadow9-23",
                                  }
                                }
                                component="div"
                                elevation={24}
                                role="document"
                                square={false}
                                tabIndex={-1}
                              >
                                <div
                                  className="MuiPaper-root-12 MuiPaper-shadow24-38 MuiPaper-rounded-13 MuiDialog-paper-2 MuiDialog-paperWidthSm-4"
                                  role="document"
                                  tabIndex={-1}
                                >
                                  <withStyles(DialogTitle)>
                                    <DialogTitle
                                      classes={
                                        Object {
                                          "root": "MuiDialogTitle-root-39",
                                        }
                                      }
                                      disableTypography={false}
                                    >
                                      <div
                                        className="MuiDialogTitle-root-39"
                                      >
                                        <withStyles(Typography)
                                          type="title"
                                        >
                                          <Typography
                                            align="inherit"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter-53",
                                                "alignJustify": "MuiTypography-alignJustify-55",
                                                "alignLeft": "MuiTypography-alignLeft-52",
                                                "alignRight": "MuiTypography-alignRight-54",
                                                "body1": "MuiTypography-body1-49",
                                                "body2": "MuiTypography-body2-48",
                                                "button": "MuiTypography-button-51",
                                                "caption": "MuiTypography-caption-50",
                                                "colorAccent": "MuiTypography-colorAccent-62",
                                                "colorError": "MuiTypography-colorError-63",
                                                "colorInherit": "MuiTypography-colorInherit-59",
                                                "colorPrimary": "MuiTypography-colorPrimary-60",
                                                "colorSecondary": "MuiTypography-colorSecondary-61",
                                                "display1": "MuiTypography-display1-44",
                                                "display2": "MuiTypography-display2-43",
                                                "display3": "MuiTypography-display3-42",
                                                "display4": "MuiTypography-display4-41",
                                                "gutterBottom": "MuiTypography-gutterBottom-57",
                                                "headline": "MuiTypography-headline-45",
                                                "noWrap": "MuiTypography-noWrap-56",
                                                "paragraph": "MuiTypography-paragraph-58",
                                                "root": "MuiTypography-root-40",
                                                "subheading": "MuiTypography-subheading-47",
                                                "title": "MuiTypography-title-46",
                                              }
                                            }
                                            color="default"
                                            gutterBottom={false}
                                            headlineMapping={
                                              Object {
                                                "body1": "p",
                                                "body2": "aside",
                                                "display1": "h1",
                                                "display2": "h1",
                                                "display3": "h1",
                                                "display4": "h1",
                                                "headline": "h1",
                                                "subheading": "h3",
                                                "title": "h2",
                                              }
                                            }
                                            noWrap={false}
                                            paragraph={false}
                                            type="title"
                                          >
                                            <h2
                                              className="MuiTypography-root-40 MuiTypography-title-46"
                                            >
                                              Edit Composition
                                            </h2>
                                          </Typography>
                                        </withStyles(Typography)>
                                      </div>
                                    </DialogTitle>
                                  </withStyles(DialogTitle)>
                                  <withStyles(DialogContent)>
                                    <DialogContent
                                      classes={
                                        Object {
                                          ".MuiDialogContent-root-64:first-child": "MuiDialogContent-root-64:first-child",
                                          "root": "MuiDialogContent-root-64",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogContent-root-64"
                                      >
                                        <withStyles(Table)>
                                          <Table
                                            classes={
                                              Object {
                                                "root": "MuiTable-root-65",
                                              }
                                            }
                                            component="table"
                                          >
                                            <table
                                              className="MuiTable-root-65"
                                            >
                                              <withStyles(TableHead)>
                                                <TableHead
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableHead-root-66",
                                                    }
                                                  }
                                                  component="thead"
                                                >
                                                  <thead
                                                    className="MuiTableHead-root-66"
                                                  >
                                                    <withStyles(TableRow)>
                                                      <TableRow
                                                        classes={
                                                          Object {
                                                            ".MuiTableRow-hover-70:hover": "MuiTableRow-hover-70:hover",
                                                            ".MuiTableRow-root-67:focus": "MuiTableRow-root-67:focus",
                                                            "footer": "MuiTableRow-footer-69",
                                                            "head": "MuiTableRow-head-68",
                                                            "hover": "MuiTableRow-hover-70",
                                                            "root": "MuiTableRow-root-67",
                                                            "selected": "MuiTableRow-selected-71",
                                                          }
                                                        }
                                                        component="tr"
                                                        hover={false}
                                                        selected={false}
                                                      >
                                                        <tr
                                                          className="MuiTableRow-root-67 MuiTableRow-head-68"
                                                        >
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <th
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75 MuiTableCell-head-74"
                                                              >
                                                                Delete
                                                              </th>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <th
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75 MuiTableCell-head-74"
                                                              >
                                                                Name
                                                              </th>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <th
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75 MuiTableCell-head-74"
                                                              >
                                                                Quantity
                                                              </th>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <th
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75 MuiTableCell-head-74"
                                                              >
                                                                Value
                                                              </th>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <th
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75 MuiTableCell-head-74"
                                                              >
                                                                Total Value
                                                              </th>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                        </tr>
                                                      </TableRow>
                                                    </withStyles(TableRow)>
                                                  </thead>
                                                </TableHead>
                                              </withStyles(TableHead)>
                                              <withStyles(TableBody)>
                                                <TableBody
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableBody-root-79",
                                                    }
                                                  }
                                                  component="tbody"
                                                >
                                                  <tbody
                                                    className="MuiTableBody-root-79"
                                                  >
                                                    <withStyles(TableRow)>
                                                      <TableRow
                                                        classes={
                                                          Object {
                                                            ".MuiTableRow-hover-70:hover": "MuiTableRow-hover-70:hover",
                                                            ".MuiTableRow-root-67:focus": "MuiTableRow-root-67:focus",
                                                            "footer": "MuiTableRow-footer-69",
                                                            "head": "MuiTableRow-head-68",
                                                            "hover": "MuiTableRow-hover-70",
                                                            "root": "MuiTableRow-root-67",
                                                            "selected": "MuiTableRow-selected-71",
                                                          }
                                                        }
                                                        component="tr"
                                                        hover={false}
                                                        selected={false}
                                                      >
                                                        <tr
                                                          className="MuiTableRow-root-67"
                                                        >
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              >
                                                                <withStyles(IconButton)
                                                                  id="add-stock"
                                                                  onClick={[Function]}
                                                                >
                                                                  <IconButton
                                                                    classes={
                                                                      Object {
                                                                        "colorAccent": "MuiIconButton-colorAccent-81",
                                                                        "colorContrast": "MuiIconButton-colorContrast-82",
                                                                        "colorInherit": "MuiIconButton-colorInherit-84",
                                                                        "colorPrimary": "MuiIconButton-colorPrimary-83",
                                                                        "disabled": "MuiIconButton-disabled-85",
                                                                        "icon": "MuiIconButton-icon-87",
                                                                        "keyboardFocused": "MuiIconButton-keyboardFocused-88",
                                                                        "label": "MuiIconButton-label-86",
                                                                        "root": "MuiIconButton-root-80",
                                                                      }
                                                                    }
                                                                    color="default"
                                                                    disableRipple={false}
                                                                    disabled={false}
                                                                    id="add-stock"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <withStyles(ButtonBase)
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root-80"
                                                                      disableRipple={false}
                                                                      disabled={false}
                                                                      id="add-stock"
                                                                      keyboardFocusedClassName="MuiIconButton-keyboardFocused-88"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ButtonBase
                                                                        centerRipple={true}
                                                                        className="MuiIconButton-root-80"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "MuiButtonBase-disabled-90",
                                                                            "root": "MuiButtonBase-root-89",
                                                                          }
                                                                        }
                                                                        disableRipple={false}
                                                                        disabled={false}
                                                                        focusRipple={false}
                                                                        id="add-stock"
                                                                        keyboardFocusedClassName="MuiIconButton-keyboardFocused-88"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                        type="button"
                                                                      >
                                                                        <button
                                                                          className="MuiButtonBase-root-89 MuiIconButton-root-80"
                                                                          disabled={false}
                                                                          id="add-stock"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                          type="button"
                                                                        >
                                                                          <span
                                                                            className="MuiIconButton-label-86"
                                                                          >
                                                                            <pure(Add)
                                                                              className="MuiIconButton-icon-87"
                                                                              key=".0"
                                                                            >
                                                                              <Add
                                                                                className="MuiIconButton-icon-87"
                                                                              >
                                                                                <withStyles(SvgIcon)
                                                                                  className="MuiIconButton-icon-87"
                                                                                >
                                                                                  <SvgIcon
                                                                                    className="MuiIconButton-icon-87"
                                                                                    classes={
                                                                                      Object {
                                                                                        "root": "MuiSvgIcon-root-91",
                                                                                      }
                                                                                    }
                                                                                    viewBox="0 0 24 24"
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="MuiSvgIcon-root-91 MuiIconButton-icon-87"
                                                                                      focusable="false"
                                                                                      viewBox="0 0 24 24"
                                                                                    >
                                                                                      <path
                                                                                        d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                                      />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </withStyles(SvgIcon)>
                                                                              </Add>
                                                                            </pure(Add)>
                                                                          </span>
                                                                          <withStyles(TouchRipple)
                                                                            center={true}
                                                                            innerRef={[Function]}
                                                                          >
                                                                            <TouchRipple
                                                                              center={true}
                                                                              classes={
                                                                                Object {
                                                                                  "0%": "%",
                                                                                  "100%": "00%",
                                                                                  "50%": "0%",
                                                                                  "ripple": "MuiTouchRipple-ripple-96",
                                                                                  "rippleFast": "MuiTouchRipple-rippleFast-98",
                                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-97",
                                                                                  "root": "MuiTouchRipple-root-92",
                                                                                  "wrapper": "MuiTouchRipple-wrapper-93",
                                                                                  "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-94",
                                                                                  "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-95",
                                                                                }
                                                                              }
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                className="MuiTouchRipple-root-92"
                                                                                component="span"
                                                                                enter={true}
                                                                                exit={true}
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root-92"
                                                                                />
                                                                              </TransitionGroup>
                                                                            </TouchRipple>
                                                                          </withStyles(TouchRipple)>
                                                                        </button>
                                                                      </ButtonBase>
                                                                    </withStyles(ButtonBase)>
                                                                  </IconButton>
                                                                </withStyles(IconButton)>
                                                              </td>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              >
                                                                <Autocomplete
                                                                  autoHighlight={true}
                                                                  getItemValue={[Function]}
                                                                  id="select-stock"
                                                                  inputProps={Object {}}
                                                                  items={Array []}
                                                                  menuStyle={
                                                                    Object {
                                                                      "background": "rgba(255, 255, 255, 0.9)",
                                                                      "borderRadius": "3px",
                                                                      "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
                                                                      "fontSize": "90%",
                                                                      "maxHeight": "50%",
                                                                      "overflow": "auto",
                                                                      "padding": "2px 0",
                                                                      "position": "fixed",
                                                                    }
                                                                  }
                                                                  onChange={[Function]}
                                                                  onMenuVisibilityChange={[Function]}
                                                                  onSelect={[Function]}
                                                                  renderInput={[Function]}
                                                                  renderItem={[Function]}
                                                                  renderMenu={[Function]}
                                                                  selectOnBlur={false}
                                                                  value=""
                                                                  wrapperProps={Object {}}
                                                                  wrapperStyle={
                                                                    Object {
                                                                      "display": "inline-block",
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    style={
                                                                      Object {
                                                                        "display": "inline-block",
                                                                      }
                                                                    }
                                                                  >
                                                                    <TextField
                                                                      aria-autocomplete="list"
                                                                      aria-expanded={false}
                                                                      autoComplete="off"
                                                                      inputRef={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      role="combobox"
                                                                      select={false}
                                                                      value=""
                                                                    >
                                                                      <withStyles(FormControl)
                                                                        aria-autocomplete="list"
                                                                        aria-expanded={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        role="combobox"
                                                                      >
                                                                        <FormControl
                                                                          aria-autocomplete="list"
                                                                          aria-expanded={false}
                                                                          classes={
                                                                            Object {
                                                                              "fullWidth": "MuiFormControl-fullWidth-102",
                                                                              "marginDense": "MuiFormControl-marginDense-101",
                                                                              "marginNormal": "MuiFormControl-marginNormal-100",
                                                                              "root": "MuiFormControl-root-99",
                                                                            }
                                                                          }
                                                                          component="div"
                                                                          disabled={false}
                                                                          error={false}
                                                                          fullWidth={false}
                                                                          margin="none"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          required={false}
                                                                          role="combobox"
                                                                        >
                                                                          <div
                                                                            aria-autocomplete="list"
                                                                            aria-expanded={false}
                                                                            className="MuiFormControl-root-99"
                                                                            onBlur={[Function]}
                                                                            onClick={[Function]}
                                                                            onFocus={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            required={false}
                                                                            role="combobox"
                                                                          >
                                                                            <withStyles(Input)
                                                                              autoComplete="off"
                                                                              inputRef={[Function]}
                                                                              onChange={[Function]}
                                                                              value=""
                                                                            >
                                                                              <Input
                                                                                autoComplete="off"
                                                                                classes={
                                                                                  Object {
                                                                                    ".MuiInput-error-106:after": "MuiInput-error-106:after",
                                                                                    ".MuiInput-inkbar-105.MuiInput-focused-110:after": "MuiInput-inkbar-105.MuiInput-focused-110:after",
                                                                                    ".MuiInput-inkbar-105:after": "MuiInput-inkbar-105:after",
                                                                                    ".MuiInput-input-107:-ms-input-placeholder": "MuiInput-input-107:-ms-input-placeholder",
                                                                                    ".MuiInput-input-107::-moz-placeholder": "MuiInput-input-107::-moz-placeholder",
                                                                                    ".MuiInput-input-107::-ms-input-placeholder": "MuiInput-input-107::-ms-input-placeholder",
                                                                                    ".MuiInput-input-107::-webkit-input-placeholder": "MuiInput-input-107::-webkit-input-placeholder",
                                                                                    ".MuiInput-input-107::-webkit-search-decoration": "MuiInput-input-107::-webkit-search-decoration",
                                                                                    ".MuiInput-input-107:focus": "MuiInput-input-107:focus",
                                                                                    ".MuiInput-input-107:invalid": "MuiInput-input-107:invalid",
                                                                                    ".MuiInput-underline-111.MuiInput-disabled-109:before": "MuiInput-underline-111.MuiInput-disabled-109:before",
                                                                                    ".MuiInput-underline-111:before": "MuiInput-underline-111:before",
                                                                                    ".MuiInput-underline-111:hover:not(.MuiInput-disabled-109):before": "MuiInput-underline-111:hover:not(.MuiInput-disabled-109):before",
                                                                                    "disabled": "MuiInput-disabled-109",
                                                                                    "error": "MuiInput-error-106",
                                                                                    "focused": "MuiInput-focused-110",
                                                                                    "formControl": "MuiInput-formControl-104",
                                                                                    "fullWidth": "MuiInput-fullWidth-117",
                                                                                    "inkbar": "MuiInput-inkbar-105",
                                                                                    "input": "MuiInput-input-107",
                                                                                    "inputDense": "MuiInput-inputDense-108",
                                                                                    "inputDisabled": "MuiInput-inputDisabled-113",
                                                                                    "inputMultiline": "MuiInput-inputMultiline-116",
                                                                                    "inputSearch": "MuiInput-inputSearch-115",
                                                                                    "inputSingleline": "MuiInput-inputSingleline-114",
                                                                                    "label + .MuiInput-formControl-104": "abel + .MuiInput-formControl-104",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:-ms-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:-ms-input-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-moz-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-moz-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-ms-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-ms-input-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-webkit-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107::-webkit-input-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus:-ms-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus:-ms-input-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-moz-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-moz-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-ms-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-ms-input-placeholder",
                                                                                    "label[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-webkit-input-placeholder": "abel[data-shrink=false] + .MuiInput-formControl-104 .MuiInput-input-107:focus::-webkit-input-placeholder",
                                                                                    "multiline": "MuiInput-multiline-112",
                                                                                    "root": "MuiInput-root-103",
                                                                                    "underline": "MuiInput-underline-111",
                                                                                  }
                                                                                }
                                                                                disableUnderline={false}
                                                                                fullWidth={false}
                                                                                inputRef={[Function]}
                                                                                multiline={false}
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value=""
                                                                              >
                                                                                <div
                                                                                  className="MuiInput-root-103 MuiInput-formControl-104 MuiInput-inkbar-105 MuiInput-underline-111"
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                >
                                                                                  <input
                                                                                    autoComplete="off"
                                                                                    className="MuiInput-input-107 MuiInput-inputSingleline-114"
                                                                                    disabled={false}
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                                                    value=""
                                                                                  />
                                                                                </div>
                                                                              </Input>
                                                                            </withStyles(Input)>
                                                                          </div>
                                                                        </FormControl>
                                                                      </withStyles(FormControl)>
                                                                    </TextField>
                                                                  </div>
                                                                </Autocomplete>
                                                              </td>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                        </tr>
                                                      </TableRow>
                                                    </withStyles(TableRow)>
                                                    <withStyles(TableRow)>
                                                      <TableRow
                                                        classes={
                                                          Object {
                                                            ".MuiTableRow-hover-70:hover": "MuiTableRow-hover-70:hover",
                                                            ".MuiTableRow-root-67:focus": "MuiTableRow-root-67:focus",
                                                            "footer": "MuiTableRow-footer-69",
                                                            "head": "MuiTableRow-head-68",
                                                            "hover": "MuiTableRow-hover-70",
                                                            "root": "MuiTableRow-root-67",
                                                            "selected": "MuiTableRow-selected-71",
                                                          }
                                                        }
                                                        component="tr"
                                                        hover={false}
                                                        selected={false}
                                                      >
                                                        <tr
                                                          className="MuiTableRow-root-67"
                                                        >
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              >
                                                                Available
                                                              </td>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={false}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              />
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                          <withStyles(TableCell)
                                                            numeric={true}
                                                            padding="dense"
                                                          >
                                                            <TableCell
                                                              classes={
                                                                Object {
                                                                  ".MuiTableCell-paddingDefault-75:last-child": "MuiTableCell-paddingDefault-75:last-child",
                                                                  "footer": "MuiTableCell-footer-78",
                                                                  "head": "MuiTableCell-head-74",
                                                                  "numeric": "MuiTableCell-numeric-73",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox-77",
                                                                  "paddingDefault": "MuiTableCell-paddingDefault-75",
                                                                  "paddingDense": "MuiTableCell-paddingDense-76",
                                                                  "root": "MuiTableCell-root-72",
                                                                }
                                                              }
                                                              numeric={true}
                                                              padding="dense"
                                                            >
                                                              <td
                                                                className="MuiTableCell-root-72 MuiTableCell-numeric-73 MuiTableCell-paddingDense-76 MuiTableCell-paddingDefault-75"
                                                              >
                                                                30.00
                                                              </td>
                                                            </TableCell>
                                                          </withStyles(TableCell)>
                                                        </tr>
                                                      </TableRow>
                                                    </withStyles(TableRow)>
                                                  </tbody>
                                                </TableBody>
                                              </withStyles(TableBody)>
                                            </table>
                                          </Table>
                                        </withStyles(Table)>
                                        <ComponentEnhancer(Range)
                                          activeDotStyle={Object {}}
                                          allowCross={true}
                                          className=""
                                          count={0}
                                          disabled={false}
                                          dotStyle={Object {}}
                                          dots={false}
                                          handle={[Function]}
                                          handleStyle={
                                            Array [
                                              Object {},
                                            ]
                                          }
                                          id="range"
                                          included={true}
                                          marks={Object {}}
                                          max={30}
                                          min={0}
                                          onAfterChange={[Function]}
                                          onBeforeChange={[Function]}
                                          onChange={[Function]}
                                          prefixCls="rc-slider"
                                          pushable={false}
                                          railStyle={Object {}}
                                          step={0.01}
                                          trackStyle={
                                            Array [
                                              Object {},
                                            ]
                                          }
                                          value={
                                            Array [
                                              0,
                                            ]
                                          }
                                          vertical={false}
                                        >
                                          <div
                                            className="rc-slider"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchStart={[Function]}
                                          >
                                            <div
                                              className="rc-slider-rail"
                                              style={Object {}}
                                            />
                                            <Steps
                                              activeDotStyle={Object {}}
                                              dotStyle={Object {}}
                                              dots={false}
                                              included={true}
                                              lowerBound={0}
                                              marks={Object {}}
                                              max={30}
                                              min={0}
                                              prefixCls="rc-slider"
                                              step={0.01}
                                              upperBound={0}
                                              vertical={false}
                                            >
                                              <div
                                                className="rc-slider-step"
                                              />
                                            </Steps>
                                            <Handle
                                              className="rc-slider-handle rc-slider-handle-1"
                                              disabled={false}
                                              key="0"
                                              max={30}
                                              min={0}
                                              offset={0}
                                              style={Object {}}
                                              value={0}
                                              vertical={false}
                                            >
                                              <div
                                                aria-disabled={false}
                                                aria-valuemax={30}
                                                aria-valuemin={0}
                                                aria-valuenow={0}
                                                className="rc-slider-handle rc-slider-handle-1"
                                                role="slider"
                                                style={
                                                  Object {
                                                    "left": "0%",
                                                  }
                                                }
                                                tabIndex="0"
                                              />
                                            </Handle>
                                            <Marks
                                              className="rc-slider-mark"
                                              included={true}
                                              lowerBound={0}
                                              marks={Object {}}
                                              max={30}
                                              min={0}
                                              upperBound={0}
                                              vertical={false}
                                            >
                                              <div
                                                className="rc-slider-mark"
                                              />
                                            </Marks>
                                          </div>
                                        </ComponentEnhancer(Range)>
                                      </div>
                                    </DialogContent>
                                  </withStyles(DialogContent)>
                                  <withStyles(DialogActions)>
                                    <DialogActions
                                      classes={
                                        Object {
                                          "action": "MuiDialogActions-action-119",
                                          "button": "MuiDialogActions-button-120",
                                          "root": "MuiDialogActions-root-118",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiDialogActions-root-118"
                                      >
                                        <div
                                          className="MuiDialogActions-action-119"
                                          key=".0"
                                        >
                                          <withStyles(Button)
                                            className="MuiDialogActions-button-120"
                                            color="primary"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              className="MuiDialogActions-button-120"
                                              classes={
                                                Object {
                                                  ".MuiButton-fab-134:active": "MuiButton-fab-134:active",
                                                  ".MuiButton-flatAccent-125:hover": "MuiButton-flatAccent-125:hover",
                                                  ".MuiButton-flatContrast-126:hover": "MuiButton-flatContrast-126:hover",
                                                  ".MuiButton-flatPrimary-124:hover": "MuiButton-flatPrimary-124:hover",
                                                  ".MuiButton-raised-128.MuiButton-disabled-133": "MuiButton-raised-128.MuiButton-disabled-133",
                                                  ".MuiButton-raised-128.MuiButton-keyboardFocused-129": "MuiButton-raised-128.MuiButton-keyboardFocused-129",
                                                  ".MuiButton-raised-128:active": "MuiButton-raised-128:active",
                                                  ".MuiButton-raised-128:hover": "MuiButton-raised-128:hover",
                                                  ".MuiButton-raised-128:hover.MuiButton-disabled-133": "MuiButton-raised-128:hover.MuiButton-disabled-133",
                                                  ".MuiButton-raisedAccent-131:hover": "MuiButton-raisedAccent-131:hover",
                                                  ".MuiButton-raisedPrimary-130:hover": "MuiButton-raisedPrimary-130:hover",
                                                  ".MuiButton-root-121:hover": "MuiButton-root-121:hover",
                                                  ".MuiButton-root-121:hover.MuiButton-disabled-133": "MuiButton-root-121:hover.MuiButton-disabled-133",
                                                  "colorInherit": "MuiButton-colorInherit-127",
                                                  "dense": "MuiButton-dense-122",
                                                  "disabled": "MuiButton-disabled-133",
                                                  "fab": "MuiButton-fab-134",
                                                  "flatAccent": "MuiButton-flatAccent-125",
                                                  "flatContrast": "MuiButton-flatContrast-126",
                                                  "flatPrimary": "MuiButton-flatPrimary-124",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-129",
                                                  "label": "MuiButton-label-123",
                                                  "raised": "MuiButton-raised-128",
                                                  "raisedAccent": "MuiButton-raisedAccent-131",
                                                  "raisedContrast": "MuiButton-raisedContrast-132",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-130",
                                                  "root": "MuiButton-root-121",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                className="MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-129"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-90",
                                                      "root": "MuiButtonBase-root-89",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-129"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-89 MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-123"
                                                    >
                                                      Cancel
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "0%": "%",
                                                            "100%": "00%",
                                                            "50%": "0%",
                                                            "ripple": "MuiTouchRipple-ripple-96",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-98",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-97",
                                                            "root": "MuiTouchRipple-root-92",
                                                            "wrapper": "MuiTouchRipple-wrapper-93",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-94",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-95",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-92"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-92"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                        <div
                                          className="MuiDialogActions-action-119"
                                          key=".1"
                                        >
                                          <withStyles(Button)
                                            className="MuiDialogActions-button-120"
                                            color="primary"
                                            onClick={[Function]}
                                          >
                                            <Button
                                              className="MuiDialogActions-button-120"
                                              classes={
                                                Object {
                                                  ".MuiButton-fab-134:active": "MuiButton-fab-134:active",
                                                  ".MuiButton-flatAccent-125:hover": "MuiButton-flatAccent-125:hover",
                                                  ".MuiButton-flatContrast-126:hover": "MuiButton-flatContrast-126:hover",
                                                  ".MuiButton-flatPrimary-124:hover": "MuiButton-flatPrimary-124:hover",
                                                  ".MuiButton-raised-128.MuiButton-disabled-133": "MuiButton-raised-128.MuiButton-disabled-133",
                                                  ".MuiButton-raised-128.MuiButton-keyboardFocused-129": "MuiButton-raised-128.MuiButton-keyboardFocused-129",
                                                  ".MuiButton-raised-128:active": "MuiButton-raised-128:active",
                                                  ".MuiButton-raised-128:hover": "MuiButton-raised-128:hover",
                                                  ".MuiButton-raised-128:hover.MuiButton-disabled-133": "MuiButton-raised-128:hover.MuiButton-disabled-133",
                                                  ".MuiButton-raisedAccent-131:hover": "MuiButton-raisedAccent-131:hover",
                                                  ".MuiButton-raisedPrimary-130:hover": "MuiButton-raisedPrimary-130:hover",
                                                  ".MuiButton-root-121:hover": "MuiButton-root-121:hover",
                                                  ".MuiButton-root-121:hover.MuiButton-disabled-133": "MuiButton-root-121:hover.MuiButton-disabled-133",
                                                  "colorInherit": "MuiButton-colorInherit-127",
                                                  "dense": "MuiButton-dense-122",
                                                  "disabled": "MuiButton-disabled-133",
                                                  "fab": "MuiButton-fab-134",
                                                  "flatAccent": "MuiButton-flatAccent-125",
                                                  "flatContrast": "MuiButton-flatContrast-126",
                                                  "flatPrimary": "MuiButton-flatPrimary-124",
                                                  "keyboardFocused": "MuiButton-keyboardFocused-129",
                                                  "label": "MuiButton-label-123",
                                                  "raised": "MuiButton-raised-128",
                                                  "raisedAccent": "MuiButton-raisedAccent-131",
                                                  "raisedContrast": "MuiButton-raisedContrast-132",
                                                  "raisedPrimary": "MuiButton-raisedPrimary-130",
                                                  "root": "MuiButton-root-121",
                                                }
                                              }
                                              color="primary"
                                              dense={false}
                                              disableFocusRipple={false}
                                              disableRipple={false}
                                              disabled={false}
                                              fab={false}
                                              onClick={[Function]}
                                              raised={false}
                                              type="button"
                                            >
                                              <withStyles(ButtonBase)
                                                className="MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-129"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ButtonBase
                                                  centerRipple={false}
                                                  className="MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiButtonBase-disabled-90",
                                                      "root": "MuiButtonBase-root-89",
                                                    }
                                                  }
                                                  disableRipple={false}
                                                  disabled={false}
                                                  focusRipple={true}
                                                  keyboardFocusedClassName="MuiButton-keyboardFocused-129"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root-89 MuiButton-root-121 MuiButton-flatPrimary-124 MuiDialogActions-button-120"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label-123"
                                                    >
                                                      Save
                                                    </span>
                                                    <withStyles(TouchRipple)
                                                      center={false}
                                                      innerRef={[Function]}
                                                    >
                                                      <TouchRipple
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "0%": "%",
                                                            "100%": "00%",
                                                            "50%": "0%",
                                                            "ripple": "MuiTouchRipple-ripple-96",
                                                            "rippleFast": "MuiTouchRipple-rippleFast-98",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible-97",
                                                            "root": "MuiTouchRipple-root-92",
                                                            "wrapper": "MuiTouchRipple-wrapper-93",
                                                            "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-94",
                                                            "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-95",
                                                          }
                                                        }
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          className="MuiTouchRipple-root-92"
                                                          component="span"
                                                          enter={true}
                                                          exit={true}
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root-92"
                                                          />
                                                        </TransitionGroup>
                                                      </TouchRipple>
                                                    </withStyles(TouchRipple)>
                                                  </button>
                                                </ButtonBase>
                                              </withStyles(ButtonBase)>
                                            </Button>
                                          </withStyles(Button)>
                                        </div>
                                      </div>
                                    </DialogActions>
                                  </withStyles(DialogActions)>
                                </div>
                              </Paper>
                            </withStyles(Paper)>
                          </Transition>
                        </Fade>
                      </withTheme(Fade)>
                    </div>
                  </Portal>
                </Modal>
              </withStyles(Modal)>
            </Dialog>
          </withStyles(Dialog)>
        </InvestComposition>
      </InvestCompositionRelay>
    </Relay(InvestCompositionRelay)>
  </div>
</CtxProvider>
`;
